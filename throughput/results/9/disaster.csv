Q21,2138509.0,->  Nested Loop Semi Join  (cost=7193.26..10008551.51 rows=1 width=34) (actual time=118.751..126921.072 rows=2138509 loops=1)
Q3,947972.7,->  Sort  (cost=7965553.27..7989252.59 rows=9479727 width=20) (actual time=114997.160..114997.161 rows=10 loops=1)
Q18,905390.1,->  GroupAggregate  (cost=36201401.28..38691224.11 rows=90539012 width=39) (actual time=251983.849..251984.180 rows=100 loops=1)
Q15,300000.0,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.038..0.038 rows=1 loops=1)
Q18,129156.9,->  Sort  (cost=36201401.28..36427748.81 rows=90539012 width=39) (actual time=251983.838..251983.883 rows=701 loops=1)
Q21,120083.0,->  Nested Loop Anti Join  (cost=7193.83..10008554.60 rows=1 width=26) (actual time=122.567..135541.233 rows=120083 loops=1)
Q10,85506.7,->  Sort  (cost=6928459.02..6932734.36 rows=1710134 width=176) (actual time=100105.668..100105.670 rows=20 loops=1)
Q9,77811.3,->  Sort  (cost=3381569.57..3381569.89 rows=126 width=46) (actual time=487962.275..493565.632 rows=9804224 loops=1)
Q9,77811.3,->  Nested Loop  (cost=200397.26..3381561.25 rows=126 width=24) (actual time=2681.938..401836.486 rows=9804224 loops=1)
Q9,77811.3,->  Nested Loop  (cost=200396.69..3381483.81 rows=126 width=24) (actual time=2681.907..207123.298 rows=9804224 loops=1)
Q9,77811.3,->  Nested Loop  (cost=200396.27..3381426.77 rows=126 width=28) (actual time=2681.888..166833.644 rows=9804224 loops=1)
Q9,77811.3,->  Hash Join  (cost=200398.82..3381565.18 rows=126 width=46) (actual time=2681.989..413683.307 rows=9804224 loops=1)
Q18,72086.5,->  Hash Join  (cost=6291387.97..8117808.14 rows=22635184 width=39) (actual time=145088.528..164402.474 rows=314 loops=1)
Q18,72086.5,->  Hash Join  (cost=6084301.97..7514606.42 rows=22635184 width=20) (actual time=142337.733..161650.694 rows=314 loops=1)
Q18,72086.5,->  Hash  (cost=8117808.14..8117808.14 rows=22635184 width=39) (actual time=164403.815..164403.815 rows=314 loops=1)
Q18,41191.5,->  Hash Join  (cost=8577585.94..21760069.55 rows=90539012 width=39) (actual time=164600.224..251980.916 rows=2198 loops=1)
Q2,14168.0,->  Merge Join  (cost=1431184.22..3084766.60 rows=1 width=190) (actual time=22400.632..29795.632 rows=14168 loops=1)
Q18,13832.4,->  Hash  (cost=6030009.61..6030009.61 rows=4343389 width=4) (actual time=142217.706..142217.706 rows=314 loops=1)
Q18,13832.4,->  HashAggregate  (cost=5932283.36..5986575.72 rows=4343389 width=8) (actual time=123226.280..142217.024 rows=314 loops=1)
Q21,12108.0,->  HashAggregate  (cost=10008554.60..10008554.61 rows=1 width=26) (actual time=135710.780..135714.037 rows=12108 loops=1)
Q7,764.2,Sort  (cost=6580454.12..6580461.77 rows=3057 width=64) (actual time=115680.632..115680.633 rows=4 loops=1)
Q7,764.2,->  HashAggregate  (cost=6580231.30..6580277.15 rows=3057 width=64) (actual time=115680.569..115680.572 rows=4 loops=1)
Q8,366.5,Sort  (cost=5483536.98..5483538.81 rows=733 width=38) (actual time=55529.739..55529.739 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5483489.27..5483502.10 rows=733 width=38) (actual time=55529.701..55529.701 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10008554.62..10008554.63 rows=1 width=26) (actual time=135716.790..135716.798 rows=100 loops=1)
Q21,100.0,Limit  (cost=10008554.62..10008554.63 rows=1 width=26) (actual time=135716.792..135716.812 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3084766.61..3084766.62 rows=1 width=190) (actual time=29809.709..29809.722 rows=100 loops=1)
Q2,100.0,Limit  (cost=3084766.61..3084766.62 rows=1 width=190) (actual time=29809.711..29809.737 rows=100 loops=1)
Q21,42.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.76 rows=42 width=8) (actual time=0.006..0.006 rows=1 loops=2219076)
Q11,32.8,Sort  (cost=1850476.53..1852873.13 rows=958641 width=12) (actual time=21620.686..21624.291 rows=29175 loops=1)
Q11,32.8,->  HashAggregate  (cost=876417.95..888400.97 rows=958641 width=12) (actual time=21278.667..21603.542 rows=29175 loops=1)
Q3,27.8,->  HashAggregate  (cost=7665902.51..7760699.78 rows=9479727 width=20) (actual time=114776.652..114932.810 rows=340739 loops=1)
Q15,27.3,->  HashAggregate  (cost=6016552.15..6016661.81 rows=10966 width=12) (actual time=60042.288..60144.131 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.80 rows=14 width=4) (actual time=0.013..0.013 rows=1 loops=1703902)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.76 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2138509)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23564.64 rows=2314064 width=0) (actual time=387.010..387.010 rows=32322560 loops=1)
Q5,10.5,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.57 rows=42 width=16) (actual time=0.014..0.015 rows=4 loops=1366460)
Q3,10.5,->  Hash Join  (cost=2292639.81..7523706.60 rows=9479727 width=20) (actual time=31286.216..113899.406 rows=900376 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7224.36 rows=960580 width=0) (actual time=100.055..100.055 rows=9728000 loops=1)
Q4,9.6,->  Nested Loop Semi Join  (cost=17553.75..2735549.05 rows=162646 width=16) (actual time=86.376..39765.846 rows=1562323 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.89 rows=1 width=24) (actual time=0.019..0.113 rows=8 loops=1307032)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.210..11.210 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.163..11.163 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.657..0.657 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.667..0.667 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.666..0.666 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.675..0.675 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.661..0.661 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.037..1.493 rows=155 loops=1)
Q5,5.0,Sort  (cost=7188560.53..7188560.60 rows=25 width=34) (actual time=49066.503..49066.504 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=7188559.70..7188559.95 rows=25 width=34) (actual time=49066.461..49066.462 rows=5 loops=1)
Q4,5.0,Sort  (cost=2736362.30..2736362.31 rows=1 width=16) (actual time=40688.237..40688.237 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2736362.28..2736362.29 rows=1 width=16) (actual time=40688.196..40688.197 rows=5 loops=1)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17127.69 rows=1701969 width=0) (actual time=85.792..85.792 rows=7674880 loops=1)
Q13,4.4,Sort  (cost=2651031.97..2651032.47 rows=200 width=8) (actual time=102783.079..102783.083 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=2651022.32..2651024.32 rows=200 width=8) (actual time=102783.008..102783.017 rows=45 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17469.80 rows=1736180 width=0) (actual time=86.375..86.375 rows=7659520 loops=1)
Q17,3.7,->  Nested Loop  (cost=219.74..341593.55 rows=60089 width=4) (actual time=4.421..696.405 rows=16064 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.77..53.61 rows=10 width=12) (actual time=0.019..0.048 rows=3 loops=6038)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..724075.57 rows=96486876 width=0) (actual time=426.389..426.389 rows=32066560 loops=1)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..166782.41 rows=22223254 width=0) (actual time=84.323..84.323 rows=7622400 loops=1)
Q22,2.3,Sort  (cost=2460789.63..2460789.64 rows=3 width=20) (actual time=34007.695..34007.696 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2302248.25..2302248.30 rows=3 width=20) (actual time=34007.655..34007.657 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.049..0.069 rows=2 loops=19274)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..6008.80 rows=598880 width=0) (actual time=12.944..12.944 rows=1216000 loops=1)
Q12,2.0,Sort  (cost=9509500.30..9509500.31 rows=1 width=27) (actual time=94975.275..94975.275 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9509500.28..9509500.29 rows=1 width=27) (actual time=94975.238..94975.238 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=831570.79..6562569.03 rows=1710134 width=12) (actual time=19196.785..84379.299 rows=3447625 loops=1)
Q10,2.0,->  Hash Join  (cost=1038658.35..6823098.28 rows=1710134 width=176) (actual time=24017.076..92912.904 rows=3447625 loops=1)
Q10,2.0,->  Hash Join  (cost=1038656.79..6799582.38 rows=1710134 width=154) (actual time=24017.046..91639.310 rows=3447625 loops=1)
Q21,1.9,->  Hash Join  (cost=7192.13..5731575.67 rows=2411974 width=34) (actual time=118.612..82061.374 rows=4598593 loops=1)
Q16,1.9,->  Sort  (cost=1224943.42..1229399.76 rows=1782539 width=40) (actual time=29508.919..30066.624 rows=3559897 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812872.49 rows=11999789 width=8) (actual time=1.596..9275.043 rows=23987600 loops=1)
Q16,1.9,->  Hash Join  (cost=164178.50..1039866.83 rows=1782539 width=40) (actual time=3784.806..18181.218 rows=3559897 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5474141.28 rows=60299341 width=8) (actual time=0.015..58553.378 rows=113911850 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7314853.04 rows=1178257 width=38) (actual time=118.700..111967.599 rows=2219076 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..551176.88 rows=55075288 width=0) (actual time=381.947..381.947 rows=32322560 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.035..0.064 rows=4 loops=19274)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.033..0.055 rows=4 loops=19274)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.025..0.027 rows=4 loops=19274)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..789.10 rows=2 width=8) (actual time=0.440..0.510 rows=3 loops=65135)
Q1,1.5,Sort  (cost=12655690.75..12655690.77 rows=6 width=20) (actual time=270615.516..270615.517 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12655690.57..12655690.68 rows=6 width=20) (actual time=270615.427..270615.428 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17938.20 rows=1791820 width=0) (actual time=12.917..12.917 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6865851.63..6882952.97 rows=1710134 width=176) (actual time=99044.342..99689.353 rows=1150485 loops=1)
Q9,1.3,GroupAggregate  (cost=3381569.57..3381573.98 rows=126 width=46) (actual time=488000.529..499862.698 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8608.82 rows=418975 width=0) (actual time=2384.876..2384.876 rows=572700 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8713.56..125547.66 rows=418975 width=24) (actual time=2419.494..3760.737 rows=572700 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.49..52236850.09 rows=132967 width=4) (actual time=42.959..34104.969 rows=177336 loops=1)
Q20,1.3,->  Hash  (cost=52236850.09..52236850.09 rows=132967 width=4) (actual time=34217.890..34217.890 rows=177336 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..275792.97 rows=27536897 width=0) (actual time=381.944..381.944 rows=32097280 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.015..7082.286 rows=24000000 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..196567.00 rows=306296 width=4) (actual time=0.059..2547.526 rows=326758 loops=1)
Q9,1.0,->  Hash Join  (cost=200395.70..1055510.52 rows=1225162 width=16) (actual time=2681.587..15011.849 rows=1307032 loops=1)
Q9,1.0,->  Hash  (cost=196567.00..196567.00 rows=306296 width=4) (actual time=2679.130..2679.130 rows=326758 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.375..6443.559 rows=899950 loops=1)
Q8,1.0,->  Nested Loop  (cost=1272.99..5331345.52 rows=376684 width=20) (actual time=24.346..47392.135 rows=366669 loops=1)
Q8,1.0,->  Nested Loop  (cost=1272.43..4564723.44 rows=1237225 width=16) (actual time=24.139..20006.571 rows=1201899 loops=1)
Q8,1.0,->  Nested Loop  (cost=114228.04..5480568.40 rows=75337 width=16) (actual time=6768.483..55258.444 rows=73137 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..108.40 rows=31 width=20) (actual time=0.031..0.477 rows=30 loops=40112)
Q8,1.0,->  Hash Join  (cost=114229.61..5481982.53 rows=75337 width=38) (actual time=6768.527..55391.424 rows=73137 loops=1)
Q8,1.0,->  Hash Join  (cost=114227.62..5446466.09 rows=75337 width=16) (actual time=6768.428..54434.723 rows=73137 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=6739.329..6739.329 rows=899950 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1261.56 rows=41200 width=0) (actual time=15.529..15.529 rows=40112 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1271.86..85812.35 rows=41200 width=4) (actual time=24.084..407.537 rows=40112 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.285..1257.183 rows=179990 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1223153.98 rows=45495298 width=8) (actual time=0.014..8775.147 rows=45000000 loops=1)
Q7,1.0,->  Hash Join  (cost=576151.10..4885003.98 rows=4406023 width=42) (actual time=529.071..86529.439 rows=4381883 loops=1)
Q7,1.0,->  Hash Join  (cost=2227616.39..6577480.88 rows=183361 width=64) (actual time=26540.946..115401.178 rows=175308 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1605969.99 rows=3639624 width=30) (actual time=1799.696..24507.671 rows=3595150 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.038..1674.390 rows=360061 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.042..136.434 rows=24031 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=1797.043..1797.043 rows=360061 loops=1)
Q7,1.0,->  Hash  (cost=1605969.99..1605969.99 rows=3639624 width=30) (actual time=25990.769..25990.769 rows=3595150 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=144.337..144.337 rows=24031 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=564945.70..4623206.02 rows=55075288 width=20) (actual time=384.516..69697.339 rows=54686323 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=276394.62..4105692.80 rows=2406590 width=8) (actual time=384.619..77264.101 rows=2387525 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..1450630.47 rows=6930383 width=8) (actual time=0.033..13869.512 rows=6825168 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.310..5946.093 rows=899828 loops=1)
Q5,1.0,->  Nested Loop  (cost=112966.68..7128503.26 rows=5544267 width=46) (actual time=6266.958..46643.744 rows=5463759 loops=1)
Q5,1.0,->  Hash Join  (cost=127005.68..7186341.98 rows=221772 width=34) (actual time=6459.964..48802.033 rows=218234 loops=1)
Q5,1.0,->  Hash Join  (cost=112966.11..1603446.29 rows=1386077 width=38) (actual time=6266.857..23310.895 rows=1366460 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=6263.422..6263.422 rows=899828 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.230..1159.683 rows=179966 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17553.18..810523.71 rows=1701969 width=20) (actual time=86.326..15821.299 rows=1703902 loops=1)
Q3,1.0,->  Hash Join  (cost=321414.35..1489011.25 rows=4434502 width=12) (actual time=2071.776..29002.133 rows=4422248 loops=1)
Q3,1.0,->  Hash  (cost=1489011.25..1489011.25 rows=4434502 width=12) (actual time=30821.483..30821.483 rows=4422248 loops=1)
Q3,1.0,->  Hash  (cost=137851.82..137851.82 rows=897945 width=4) (actual time=1981.578..1981.578 rows=899718 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20567.02 rows=897945 width=0) (actual time=209.986..209.986 rows=899718 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=172338.22..1212252.89 rows=22223254 width=16) (actual time=84.841..18288.754 rows=22128989 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=748197.29..5160815.24 rows=96486876 width=12) (actual time=428.958..66107.058 rows=96162179 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20791.51..137851.82 rows=897945 width=4) (actual time=242.399..1687.290 rows=899718 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1223153.98 rows=45495298 width=4) (actual time=0.014..11456.436 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1223153.98..1223153.98 rows=45495298 width=4) (actual time=22691.728..22691.728 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1978275.77..2300895.02 rows=180431 width=20) (actual time=25267.324..33931.992 rows=190770 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19578.34 rows=1142309 width=0) (actual time=298.080..298.080 rows=1145025 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19863.92..155685.53 rows=1142309 width=4) (actual time=330.188..1963.719 rows=1145025 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.700..114.538 rows=12108 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=118.505..118.505 rows=12108 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.686..112.496 rows=12108 loops=1)
Q2,1.0,->  Sort  (cost=1431183.48..1443166.50 rows=4793205 width=168) (actual time=22400.004..23966.970 rows=4800242 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.004..6061.833 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.738..472.481 rows=60005 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=23585 width=30) (actual time=0.114..3647.634 rows=24063 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899316.06 rows=4793205 width=168) (actual time=508.179..15042.129 rows=4800400 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=507.909..507.909 rows=60005 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.677..91.818 rows=12001 loops=5)
Q20,1.0,Sort  (cost=52246053.93..52246067.23 rows=5319 width=51) (actual time=34340.131..34340.417 rows=5278 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.703..108.003 rows=11886 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=52238617.18..52245724.76 rows=5319 width=51) (actual time=34219.916..34333.298 rows=5278 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.54 rows=59998 width=0) (actual time=28.633..28.633 rows=65135 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.688..105.728 rows=11886 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.05..104662.28 rows=66064 width=4) (actual time=42.082..754.806 rows=65135 loops=1)
Q19,1.0,->  Nested Loop  (cost=38478.47..1884592.06 rows=3505 width=8) (actual time=112.907..8019.351 rows=3403 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11970.80 rows=1195080 width=0) (actual time=12.863..12.863 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..859.51 rows=24927 width=0) (actual time=12.325..12.325 rows=24019 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..836.67 rows=24246 width=0) (actual time=10.801..10.801 rows=23994 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..836.47 rows=24225 width=0) (actual time=10.709..10.709 rows=23868 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=14492)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38473.73..80483.50 rows=14680 width=30) (actual time=106.143..837.115 rows=14492 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1217106.68 rows=45270368 width=16) (actual time=0.036..8334.386 rows=45045000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5026893.24 rows=181078024 width=8) (actual time=0.005..32404.695 rows=180178654 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5026893.24 rows=181078024 width=8) (actual time=0.039..44924.204 rows=180178654 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.024..0.042 rows=30 loops=6038)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.024..0.042 rows=30 loops=6038)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..208.47 rows=5991 width=0) (actual time=2.859..2.859 rows=6038 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=209.97..19840.91 rows=5991 width=4) (actual time=3.960..96.037 rows=6038 loops=1)
Q16,1.0,Sort  (cost=1249560.01..1249629.64 rows=27853 width=40) (actual time=31939.340..31942.422 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=153028.68..153028.68 rows=891285 width=40) (actual time=3778.621..3778.621 rows=890432 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1224943.42..1247503.68 rows=27853 width=40) (actual time=29509.031..31884.557 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7447.18..153028.68 rows=891285 width=40) (actual time=100.171..3377.618 rows=890432 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5949983.68 rows=6656847 width=12) (actual time=0.049..53841.946 rows=6739908 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..5949983.68 rows=6656847 width=12) (actual time=0.019..55292.734 rows=6739908 loops=1)
Q14,1.0,->  Hash Join  (cost=280710.15..3465969.58 rows=2314064 width=29) (actual time=4906.210..75100.034 rows=2317107 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=24143.15..3163121.30 rows=2314064 width=12) (actual time=389.665..68324.665 rows=2317107 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1324993.86 rows=44730776 width=8) (actual time=0.020..24225.601 rows=44559928 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2314868.44 rows=44730776 width=8) (actual time=2452.278..61502.202 rows=46060005 loops=1)
Q12,1.0,->  Sort  (cost=7412444.25..7414617.77 rows=869408 width=15) (actual time=73075.293..73208.239 rows=935236 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7326678.57 rows=869408 width=15) (actual time=0.117..72430.692 rows=935236 loops=1)
Q12,1.0,->  Merge Join  (cost=7412457.32..9494285.64 rows=869408 width=27) (actual time=73075.366..94099.758 rows=935236 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1955062.03 rows=45495298 width=20) (actual time=0.007..15861.070 rows=44999993 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.018..5586.192 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=16) (actual time=0.021..5522.118 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.725..113.763 rows=11902 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.719..79.631 rows=11902 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=8) (actual time=83.013..10025.034 rows=952160 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=12) (actual time=117.502..10187.853 rows=952160 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=82.887..82.887 rows=11902 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=117.394..117.394 rows=11902 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.681..77.766 rows=11902 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.700..111.842 rows=11902 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5506879.65 rows=178720273 width=20) (actual time=0.013..57879.616 rows=176931697 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5490497.69 rows=44679843 width=12) (actual time=0.031..53864.581 rows=44463261 loops=1)
Q10,1.0,->  Hash  (cost=809868.54..809868.54 rows=1736180 width=8) (actual time=19190.564..19190.564 rows=1722139 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17903.84..809868.54 rows=1736180 width=8) (actual time=86.903..18440.527 rows=1722139 loops=1)
