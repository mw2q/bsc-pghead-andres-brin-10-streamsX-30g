Q21,2114418.0,->  Nested Loop Semi Join  (cost=7193.26..10068676.63 rows=1 width=34) (actual time=116.087..118781.870 rows=2114418 loops=1)
Q3,958548.9,->  Sort  (cost=8054636.41..8078600.14 rows=9585489 width=20) (actual time=109437.972..109437.972 rows=10 loops=1)
Q18,909899.4,->  GroupAggregate  (cost=36382926.84..38885150.36 rows=90989946 width=39) (actual time=251133.953..251134.300 rows=100 loops=1)
Q18,129800.2,->  Sort  (cost=36382926.84..36610401.71 rows=90989946 width=39) (actual time=251133.943..251133.983 rows=701 loops=1)
Q21,118801.0,->  Nested Loop Anti Join  (cost=7193.83..10068679.72 rows=1 width=26) (actual time=117.247..127254.643 rows=118801 loops=1)
Q18,96388.3,->  Hash Join  (cost=6320934.00..8156213.09 rows=22747649 width=39) (actual time=144029.553..162027.028 rows=236 loops=1)
Q18,96388.3,->  Hash Join  (cost=6113848.00..7551043.23 rows=22747649 width=20) (actual time=140376.462..158373.029 rows=236 loops=1)
Q18,96388.3,->  Hash  (cost=8156213.09..8156213.09 rows=22747649 width=39) (actual time=162028.004..162028.004 rows=236 loops=1)
Q10,84276.7,->  Sort  (cost=6944313.01..6948526.85 rows=1685535 width=176) (actual time=97574.705..97574.710 rows=20 loops=1)
Q9,65549.9,->  Sort  (cost=3836899.81..3836900.18 rows=150 width=46) (actual time=489271.761..495538.781 rows=9832499 loops=1)
Q9,65549.9,->  Nested Loop  (cost=201147.98..3836890.01 rows=150 width=24) (actual time=3012.057..401255.085 rows=9832499 loops=1)
Q9,65549.9,->  Nested Loop  (cost=201147.42..3836797.81 rows=150 width=24) (actual time=3012.006..207439.780 rows=9832499 loops=1)
Q9,65549.9,->  Nested Loop  (cost=201146.99..3836729.91 rows=150 width=28) (actual time=3011.989..166758.063 rows=9832499 loops=1)
Q9,65549.9,->  Hash Join  (cost=201149.54..3836894.38 rows=150 width=46) (actual time=3012.109..413355.578 rows=9832499 loops=1)
Q18,55078.6,->  Hash Join  (cost=8618275.70..21866411.71 rows=90989946 width=39) (actual time=162271.735..251131.618 rows=1652 loops=1)
Q18,18404.1,->  Hash  (cost=6059555.63..6059555.63 rows=4343389 width=4) (actual time=140303.351..140303.351 rows=236 loops=1)
Q18,18404.1,->  HashAggregate  (cost=5961829.38..6016121.74 rows=4343389 width=8) (actual time=122719.973..140302.774 rows=236 loops=1)
Q2,14082.0,->  Merge Join  (cost=1431184.22..3111715.09 rows=1 width=190) (actual time=21930.105..28494.146 rows=14082 loops=1)
Q21,11980.0,->  HashAggregate  (cost=10068679.73..10068679.74 rows=1 width=26) (actual time=127420.114..127423.337 rows=11980 loops=1)
Q15,11124.0,->  Subquery Scan on revenue8  (cost=4671551.99..4671802.28 rows=11124 width=12) (actual time=160345.411..160398.551 rows=1 loops=1)
Q15,11124.0,->  Sort  (cost=4672549.89..4672577.70 rows=11124 width=12) (actual time=160398.573..160398.573 rows=1 loops=1)
Q15,11124.0,Merge Join  (cost=9293957.90..9309219.70 rows=11124 width=79) (actual time=160486.222..160486.225 rows=1 loops=1)
Q15,11124.0,->  HashAggregate  (cost=4671551.99..4671691.04 rows=11124 width=12) (actual time=160345.410..160398.549 rows=1 loops=1)
Q7,764.2,Sort  (cost=6580454.12..6580461.77 rows=3057 width=64) (actual time=114911.055..114911.056 rows=4 loops=1)
Q7,764.2,->  HashAggregate  (cost=6580231.30..6580277.15 rows=3057 width=64) (actual time=114910.993..114910.997 rows=4 loops=1)
Q8,366.5,Sort  (cost=5233321.05..5233322.88 rows=733 width=38) (actual time=55447.102..55447.103 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5233273.34..5233286.17 rows=733 width=38) (actual time=55447.061..55447.062 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10068679.75..10068679.75 rows=1 width=26) (actual time=127425.967..127425.973 rows=100 loops=1)
Q21,100.0,Limit  (cost=10068679.75..10068679.75 rows=1 width=26) (actual time=127425.969..127425.985 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3111715.10..3111715.11 rows=1 width=190) (actual time=28508.072..28508.085 rows=100 loops=1)
Q2,100.0,Limit  (cost=3111715.10..3111715.11 rows=1 width=190) (actual time=28508.074..28508.098 rows=100 loops=1)
Q21,42.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.76 rows=42 width=8) (actual time=0.006..0.006 rows=1 loops=2194216)
Q11,35.4,Sort  (cost=1850476.53..1852873.13 rows=958641 width=12) (actual time=20473.831..20477.070 rows=27068 loops=1)
Q11,35.4,->  HashAggregate  (cost=876417.95..888400.97 rows=958641 width=12) (actual time=20220.273..20458.043 rows=27068 loops=1)
Q3,28.1,->  HashAggregate  (cost=7751642.55..7847497.44 rows=9585489 width=20) (actual time=109232.083..109374.823 rows=340044 loops=1)
Q15,26.9,->  HashAggregate  (cost=4621157.29..4621268.53 rows=11124 width=12) (actual time=78669.119..78787.507 rows=300000 loops=1)
Q14,15.3,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..21526.73 rows=2110273 width=0) (actual time=381.698..381.698 rows=32322560 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.82 rows=14 width=4) (actual time=0.013..0.013 rows=1 loops=1701996)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.76 rows=14 width=8) (actual time=0.003..0.003 rows=1 loops=2114418)
Q3,10.6,->  Hash Join  (cost=2310994.95..7607860.22 rows=9585489 width=20) (actual time=28246.170..108369.944 rows=897349 loops=1)
Q5,10.5,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.56 rows=42 width=16) (actual time=0.013..0.015 rows=4 loops=1371722)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7228.71 rows=961160 width=0) (actual time=102.376..102.376 rows=9728000 loops=1)
Q4,9.6,->  Nested Loop Semi Join  (cost=17493.76..2732288.69 rows=161926 width=16) (actual time=87.090..40498.526 rows=1560265 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.89 rows=1 width=24) (actual time=0.019..0.113 rows=8 loops=1309824)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.190..11.190 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.204..11.204 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.650..0.650 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.665..0.665 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.695..0.695 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.667..0.667 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.666..0.666 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.040..1.462 rows=155 loops=1)
Q5,5.0,Sort  (cost=7144653.14..7144653.20 rows=25 width=34) (actual time=49791.604..49791.605 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=7144652.31..7144652.56 rows=25 width=34) (actual time=49791.557..49791.558 rows=5 loops=1)
Q4,5.0,Sort  (cost=2733098.34..2733098.34 rows=1 width=16) (actual time=41432.469..41432.469 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2733098.32..2733098.33 rows=1 width=16) (actual time=41432.427..41432.427 rows=5 loops=1)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17069.16 rows=1696116 width=0) (actual time=86.490..86.490 rows=7682560 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17219.92 rows=1711192 width=0) (actual time=85.190..85.190 rows=7682560 loops=1)
Q13,4.3,Sort  (cost=2669930.55..2669931.05 rows=200 width=8) (actual time=88246.336..88246.338 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=2669920.91..2669922.91 rows=200 width=8) (actual time=88246.273..88246.280 rows=46 loops=1)
Q17,3.6,->  Nested Loop  (cost=219.47..340141.95 rows=59948 width=4) (actual time=4.289..680.521 rows=16236 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.77..53.61 rows=10 width=12) (actual time=0.020..0.049 rows=3 loops=6005)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..738753.77 rows=98443969 width=0) (actual time=384.321..384.321 rows=32322560 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..165849.94 rows=22098926 width=0) (actual time=85.018..85.018 rows=7682560 loops=1)
Q22,2.3,Sort  (cost=2460614.02..2460614.03 rows=3 width=20) (actual time=34097.954..34097.954 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2302154.81..2302154.86 rows=3 width=20) (actual time=34097.908..34097.911 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.045..0.063 rows=2 loops=19114)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..6008.80 rows=598880 width=0) (actual time=13.001..13.001 rows=1216000 loops=1)
Q12,2.0,Sort  (cost=9499440.00..9499440.00 rows=1 width=27) (actual time=95654.576..95654.576 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9499439.98..9499439.99 rows=1 width=27) (actual time=95654.541..95654.542 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=832906.50..6580707.27 rows=1685535 width=12) (actual time=18608.356..82770.992 rows=3400351 loops=1)
Q10,2.0,->  Hash Join  (cost=1039994.07..6840467.80 rows=1685535 width=176) (actual time=23040.884..90466.831 rows=3400351 loops=1)
Q10,2.0,->  Hash Join  (cost=1039992.50..6817290.14 rows=1685535 width=154) (actual time=23040.849..89220.326 rows=3400351 loops=1)
Q16,1.9,->  Sort  (cost=1225027.25..1229484.87 rows=1783049 width=40) (actual time=30406.207..31000.936 rows=3555269 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812872.49 rows=11999789 width=8) (actual time=1.618..9264.419 rows=23987600 loops=1)
Q16,1.9,->  Hash Join  (cost=164200.60..1039894.03 rows=1783049 width=40) (actual time=3812.139..18028.233 rows=3555269 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5506879.65 rows=60659964 width=8) (actual time=0.014..55464.892 rows=113799629 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7358673.34 rows=1185304 width=38) (actual time=116.058..105005.367 rows=2194216 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5765810.63 rows=2426399 width=34) (actual time=116.026..77602.612 rows=4543686 loops=1)
Q15,1.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..447804.84 rows=59650779 width=0) (actual time=379.853..379.853 rows=32097280 loops=1)
Q15,1.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..447804.84 rows=59650779 width=0) (actual time=378.450..378.450 rows=32097280 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..551176.88 rows=55075288 width=0) (actual time=383.961..383.961 rows=32322560 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.033..0.059 rows=4 loops=19114)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.031..0.050 rows=4 loops=19114)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.024..0.026 rows=4 loops=19114)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..789.10 rows=2 width=8) (actual time=0.437..0.509 rows=3 loops=65254)
Q1,1.5,Sort  (cost=12551165.27..12551165.28 rows=6 width=20) (actual time=268721.384..268721.385 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12551165.09..12551165.19 rows=6 width=20) (actual time=268721.331..268721.332 rows=4 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17938.20 rows=1791820 width=0) (actual time=12.820..12.820 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6882606.18..6899461.53 rows=1685535 width=176) (actual time=96501.608..97163.021 rows=1139059 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8574.52 rows=418350 width=0) (actual time=2293.998..2293.998 rows=572365 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8679.11..125496.79 rows=418350 width=24) (actual time=2326.701..3632.566 rows=572365 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.49..52236850.09 rows=132967 width=4) (actual time=45.071..34145.101 rows=177399 loops=1)
Q20,1.3,->  Hash  (cost=52236850.09..52236850.09 rows=132967 width=4) (actual time=34260.787..34260.787 rows=177399 loops=1)
Q15,1.2,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.038..64.763 rows=230915 loops=1)
Q9,1.1,->  Seq Scan on part  (cost=0.00..196567.00 rows=366354 width=4) (actual time=0.013..2881.591 rows=327456 loops=1)
Q9,1.1,->  Hash Join  (cost=201146.42..1058663.52 rows=1465390 width=16) (actual time=3011.837..15349.230 rows=1309824 loops=1)
Q9,1.1,->  Hash  (cost=196567.00..196567.00 rows=366354 width=4) (actual time=3009.774..3009.774 rows=327456 loops=1)
Q9,1.1,GroupAggregate  (cost=3836899.81..3836905.06 rows=150 width=46) (actual time=489311.867..501911.153 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..277715.83 rows=27729183 width=0) (actual time=387.664..387.664 rows=32322560 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.014..7275.098 rows=24000000 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.373..6243.978 rows=901465 loops=1)
Q8,1.0,->  Nested Loop  (cost=1204.41..5097257.81 rows=358544 width=20) (actual time=22.807..47868.510 rows=364295 loops=1)
Q8,1.0,->  Nested Loop  (cost=1203.84..4367539.72 rows=1177646 width=16) (actual time=22.609..19373.414 rows=1200964 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..109.38 rows=31 width=20) (actual time=0.030..0.461 rows=30 loops=40025)
Q8,1.0,->  Hash Join  (cost=14493.41..5115476.79 rows=358544 width=20) (actual time=215.197..48396.630 rows=364295 loops=1)
Q8,1.0,->  Hash Join  (cost=127449.60..5231839.16 rows=71709 width=38) (actual time=6742.917..55314.764 rows=73336 loops=1)
Q8,1.0,->  Hash Join  (cost=127448.04..5230493.05 rows=71709 width=16) (actual time=6742.873..55185.826 rows=73336 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=6524.097..6524.097 rows=901465 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1193.51 rows=39060 width=0) (actual time=14.695..14.695 rows=40025 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1203.27..83186.25 rows=39060 width=4) (actual time=22.546..444.719 rows=40025 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.263..1218.178 rows=180293 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1223153.98 rows=45495298 width=8) (actual time=0.018..8855.655 rows=45000000 loops=1)
Q7,1.0,->  Hash Join  (cost=576151.10..4885003.98 rows=4406023 width=42) (actual time=529.741..86268.317 rows=4406194 loops=1)
Q7,1.0,->  Hash Join  (cost=2227616.39..6577480.88 rows=183361 width=64) (actual time=26871.754..114633.256 rows=176269 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1605969.99 rows=3639624 width=30) (actual time=2491.451..25066.299 rows=3590884 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.044..2351.191 rows=359531 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.049..134.836 rows=24170 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2489.428..2489.428 rows=359531 loops=1)
Q7,1.0,->  Hash  (cost=1605969.99..1605969.99 rows=3639624 width=30) (actual time=26330.058..26330.058 rows=3590884 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=143.114..143.114 rows=24170 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=564945.70..4623206.02 rows=55075288 width=20) (actual time=386.483..70703.247 rows=54686323 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=278297.82..4134335.43 rows=2327930 width=8) (actual time=390.314..74794.591 rows=2282188 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..1442025.27 rows=6889272 width=8) (actual time=0.040..14324.077 rows=6831872 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.430..6692.002 rows=901465 loops=1)
Q5,1.0,->  Nested Loop  (cost=112966.68..7084869.45 rows=5511306 width=46) (actual time=7053.737..47299.647 rows=5490203 loops=1)
Q5,1.0,->  Hash Join  (cost=127005.68..7142447.78 rows=220453 width=34) (actual time=7248.748..49530.749 rows=220070 loops=1)
Q5,1.0,->  Hash Join  (cost=112966.11..1594604.69 rows=1377854 width=38) (actual time=7053.686..24723.730 rows=1371722 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=7048.623..7048.623 rows=901465 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.279..1306.315 rows=180293 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17493.19..811135.93 rows=1696116 width=20) (actual time=87.055..17067.360 rows=1701996 loops=1)
Q3,1.0,->  Hash Join  (cost=320649.41..1492256.73 rows=4429877 width=12) (actual time=1524.850..25978.267 rows=4358688 loops=1)
Q3,1.0,->  Hash  (cost=1492256.73..1492256.73 rows=4429877 width=12) (actual time=27819.666..27819.666 rows=4358688 loops=1)
Q3,1.0,->  Hash  (cost=137999.05..137999.05 rows=902055 width=4) (actual time=1434.409..1434.409 rows=898061 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20661.84 rows=902055 width=0) (actual time=202.259..202.259 rows=898061 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=171374.68..1215812.25 rows=22098926 width=16) (actual time=85.526..15979.103 rows=21808131 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=763364.76..5226045.37 rows=98443969 width=12) (actual time=386.880..63719.199 rows=97262500 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20887.36..137999.05 rows=902055 width=4) (actual time=236.510..1174.328 rows=898061 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1223153.98 rows=45495298 width=4) (actual time=0.012..11557.130 rows=45000000 loops=1)
Q22,1.0,->  Hash  (cost=1223153.98..1223153.98 rows=45495298 width=4) (actual time=22585.529..22585.529 rows=45000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1978241.31..2300803.60 rows=180162 width=20) (actual time=25011.686..34024.488 rows=190475 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19545.58 rows=1140605 width=0) (actual time=288.334..288.334 rows=1144397 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19830.73..155607.61 rows=1140605 width=4) (actual time=319.739..1876.194 rows=1144397 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.696..111.947 rows=11981 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=115.929..115.929 rows=11981 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.684..109.916 rows=11981 loops=1)
Q2,1.0,->  Sort  (cost=1431183.48..1443166.50 rows=4793205 width=168) (actual time=21929.626..23485.952 rows=4807045 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.013..6010.854 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.721..438.273 rows=60089 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=24065 width=30) (actual time=0.123..2944.383 rows=23790 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899316.06 rows=4793205 width=168) (actual time=473.546..14871.939 rows=4807120 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=473.274..473.274 rows=60089 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.665..85.090 rows=12018 loops=5)
Q20,1.0,Sort  (cost=52246053.93..52246067.23 rows=5319 width=51) (actual time=34353.770..34354.085 rows=5477 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.727..81.252 rows=12202 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=52238617.18..52245724.76 rows=5319 width=51) (actual time=34262.831..34348.459 rows=5477 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.54 rows=59998 width=0) (actual time=30.482..30.482 rows=65254 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.711..79.385 rows=12202 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.05..104662.28 rows=66064 width=4) (actual time=44.419..821.421 rows=65254 loops=1)
Q19,1.0,->  Nested Loop  (cost=38488.03..1867827.19 rows=3446 width=8) (actual time=103.176..10072.439 rows=3328 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11970.80 rows=1195080 width=0) (actual time=12.779..12.779 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..855.07 rows=24486 width=0) (actual time=10.109..10.109 rows=23972 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..854.27 rows=24404 width=0) (actual time=10.416..10.416 rows=23853 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..833.07 rows=23885 width=0) (actual time=10.970..10.970 rows=23887 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.029..0.029 rows=30 loops=14437)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38483.29..80191.75 rows=14546 width=30) (actual time=102.285..1022.324 rows=14437 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1223153.98 rows=45495298 width=16) (actual time=0.019..8383.589 rows=45000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5051929.92 rows=181979892 width=8) (actual time=0.009..33512.163 rows=180000497 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5051929.92 rows=181979892 width=8) (actual time=0.043..44810.809 rows=180000497 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.022..0.040 rows=30 loops=6005)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.022..0.040 rows=30 loops=6005)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..208.21 rows=5965 width=0) (actual time=2.734..2.734 rows=6005 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=209.70..19767.92 rows=5965 width=4) (actual time=3.820..92.234 rows=6005 loops=1)
Q16,1.0,Sort  (cost=1249650.94..1249720.59 rows=27861 width=40) (actual time=32877.187..32881.873 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=153047.59..153047.59 rows=891540 width=40) (actual time=3806.981..3806.981 rows=889278 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1225027.25..1247593.97 rows=27861 width=40) (actual time=30406.335..32820.300 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7451.59..153047.59 rows=891540 width=40) (actual time=102.475..3433.030 rows=889278 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=449484.66..4553964.35 rows=6719294 width=12) (actual time=380.988..71494.727 rows=6738867 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=449484.66..4553964.35 rows=6719294 width=12) (actual time=382.491..74228.868 rows=6738867 loops=1)
Q14,1.0,->  Hash Join  (cost=278621.30..3367665.30 rows=2110273 width=29) (actual time=5078.210..77243.403 rows=2094330 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=22054.30..3068892.84 rows=2110273 width=12) (actual time=384.261..70220.925 rows=2094330 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1336892.23 rows=45041897 width=8) (actual time=0.026..24295.409 rows=44517169 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2332211.42 rows=45041897 width=8) (actual time=3213.624..55617.588 rows=46017245 loops=1)
Q12,1.0,->  Sort  (cost=7404977.37..7407146.45 rows=867631 width=15) (actual time=73936.853..74064.715 rows=936353 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7319399.79 rows=867631 width=15) (actual time=0.171..73275.929 rows=936353 loops=1)
Q12,1.0,->  Merge Join  (cost=7404990.44..9484256.43 rows=867631 width=27) (actual time=73936.887..94782.954 rows=936353 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1952638.88 rows=45450288 width=20) (actual time=0.007..15676.547 rows=45044993 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.018..5285.754 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=16) (actual time=0.035..5362.505 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.727..119.642 rows=12092 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.717..131.438 rows=12092 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=8) (actual time=136.069..9460.927 rows=967360 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=12) (actual time=123.547..9716.207 rows=967360 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=135.947..135.947 rows=12092 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=123.426..123.426 rows=12092 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.688..128.785 rows=12092 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.704..117.357 rows=12092 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5453225.53 rows=177448489 width=20) (actual time=0.016..56591.315 rows=177240680 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5506879.65 rows=44813154 width=12) (actual time=0.038..53917.193 rows=44419494 loops=1)
Q10,1.0,->  Hash  (cost=811516.60..811516.60 rows=1711192 width=8) (actual time=18602.115..18602.115 rows=1700231 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17647.72..811516.60 rows=1711192 width=8) (actual time=85.725..17952.666 rows=1700231 loops=1)
