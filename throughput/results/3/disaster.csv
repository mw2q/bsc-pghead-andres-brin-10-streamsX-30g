Q21,2116097.0,->  Nested Loop Semi Join  (cost=7193.26..10068676.63 rows=1 width=34) (actual time=118.702..121362.363 rows=2116097 loops=1)
Q3,956949.5,->  Sort  (cost=8038299.12..8062222.86 rows=9569495 width=20) (actual time=107918.048..107918.048 rows=10 loops=1)
Q18,906291.5,->  GroupAggregate  (cost=36237689.46..38729991.19 rows=90629154 width=39) (actual time=275429.090..275429.419 rows=100 loops=1)
Q15,300000.0,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.043..0.043 rows=1 loops=1)
Q18,129285.5,->  Sort  (cost=36237689.46..36464262.34 rows=90629154 width=39) (actual time=275429.080..275429.117 rows=701 loops=1)
Q21,118678.0,->  Nested Loop Anti Join  (cost=7193.83..10068679.72 rows=1 width=26) (actual time=120.091..129865.480 rows=118678 loops=1)
Q18,96415.6,->  Hash Join  (cost=6297294.23..8125487.13 rows=22657689 width=39) (actual time=164285.399..182864.741 rows=235 loops=1)
Q18,96415.6,->  Hash Join  (cost=6090208.23..7521891.57 rows=22657689 width=20) (actual time=160365.181..178943.588 rows=235 loops=1)
Q18,96415.6,->  Hash  (cost=8125487.13..8125487.13 rows=22657689 width=39) (actual time=182865.895..182865.895 rows=235 loops=1)
Q10,86875.6,->  Sort  (cost=6951651.47..6955995.25 rows=1737513 width=176) (actual time=100467.511..100467.513 rows=20 loops=1)
Q9,73058.1,->  Sort  (cost=3518653.92..3518654.25 rows=134 width=46) (actual time=495854.294..500742.331 rows=9789787 loops=1)
Q9,73058.1,->  Nested Loop  (cost=200622.48..3518645.11 rows=134 width=24) (actual time=2716.399..411225.385 rows=9789787 loops=1)
Q9,73058.1,->  Nested Loop  (cost=200621.92..3518562.74 rows=134 width=24) (actual time=2716.380..209222.356 rows=9789787 loops=1)
Q9,73058.1,->  Nested Loop  (cost=200621.49..3518502.09 rows=134 width=28) (actual time=2716.362..168970.908 rows=9789787 loops=1)
Q9,73058.1,->  Hash Join  (cost=200624.04..3518649.18 rows=134 width=46) (actual time=2716.459..423317.946 rows=9789787 loops=1)
Q18,55093.7,->  Hash Join  (cost=8585722.24..21781329.99 rows=90629154 width=39) (actual time=182989.573..275426.793 rows=1645 loops=1)
Q18,18482.5,->  Hash  (cost=6035915.87..6035915.87 rows=4343389 width=4) (actual time=160324.760..160324.760 rows=235 loops=1)
Q18,18482.5,->  HashAggregate  (cost=5938189.62..5992481.98 rows=4343389 width=8) (actual time=136516.868..160323.915 rows=235 loops=1)
Q2,14040.0,->  Merge Join  (cost=1431184.22..3123855.95 rows=1 width=190) (actual time=24447.197..31732.064 rows=14040 loops=1)
Q21,11992.0,->  HashAggregate  (cost=10068679.73..10068679.74 rows=1 width=26) (actual time=130036.319..130039.393 rows=11992 loops=1)
Q7,764.2,Sort  (cost=6529836.17..6529843.81 rows=3057 width=64) (actual time=123755.483..123755.483 rows=4 loops=1)
Q7,764.2,->  HashAggregate  (cost=6529613.35..6529659.20 rows=3057 width=64) (actual time=123755.415..123755.422 rows=4 loops=1)
Q8,366.5,Sort  (cost=5223266.99..5223268.82 rows=733 width=38) (actual time=52998.246..52998.246 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5223219.28..5223232.10 rows=733 width=38) (actual time=52998.208..52998.209 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10068679.75..10068679.75 rows=1 width=26) (actual time=130042.183..130042.192 rows=100 loops=1)
Q21,100.0,Limit  (cost=10068679.75..10068679.75 rows=1 width=26) (actual time=130042.185..130042.202 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3123855.96..3123855.97 rows=1 width=190) (actual time=31745.563..31745.580 rows=100 loops=1)
Q2,100.0,Limit  (cost=3123855.96..3123855.97 rows=1 width=190) (actual time=31745.564..31745.589 rows=100 loops=1)
Q21,42.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.76 rows=42 width=8) (actual time=0.006..0.006 rows=1 loops=2196144)
Q11,33.6,Sort  (cost=1850476.53..1852873.13 rows=958641 width=12) (actual time=20755.090..20758.542 rows=28516 loops=1)
Q11,33.6,->  HashAggregate  (cost=876417.95..888400.97 rows=958641 width=12) (actual time=20469.469..20738.428 rows=28516 loops=1)
Q3,28.1,->  HashAggregate  (cost=7735810.83..7831505.78 rows=9569495 width=20) (actual time=107712.709..107854.977 rows=339876 loops=1)
Q15,26.6,->  HashAggregate  (cost=6030204.86..6030317.27 rows=11241 width=12) (actual time=61937.869..62049.339 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.62 rows=14 width=4) (actual time=0.014..0.014 rows=1 loops=1721982)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.76 rows=14 width=8) (actual time=0.003..0.003 rows=1 loops=2116097)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23512.61 rows=2308861 width=0) (actual time=385.228..385.228 rows=32257280 loops=1)
Q3,10.6,->  Hash Join  (cost=2310409.21..7592268.40 rows=9569495 width=20) (actual time=28409.762..106870.204 rows=896923 loops=1)
Q5,10.5,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.58 rows=42 width=16) (actual time=0.015..0.017 rows=4 loops=1363213)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7200.81 rows=957440 width=0) (actual time=99.867..99.867 rows=9728000 loops=1)
Q4,9.3,->  Nested Loop Semi Join  (cost=18038.84..2762014.94 rows=168503 width=16) (actual time=85.061..43534.259 rows=1578351 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.89 rows=1 width=24) (actual time=0.020..0.115 rows=8 loops=1303896)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.222..11.222 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.185..11.185 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.646..0.646 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.666..0.666 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.665..0.665 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.675..0.675 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.660..0.660 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.041..1.225 rows=155 loops=1)
Q5,5.0,Sort  (cost=6668850.59..6668850.65 rows=25 width=34) (actual time=56068.734..56068.735 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=6668849.76..6668850.01 rows=25 width=34) (actual time=56068.681..56068.681 rows=5 loops=1)
Q4,5.0,Sort  (cost=2762857.48..2762857.48 rows=1 width=16) (actual time=44496.384..44496.385 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2762857.46..2762857.47 rows=1 width=16) (actual time=44496.343..44496.343 rows=5 loops=1)
Q4,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17600.95 rows=1749295 width=0) (actual time=84.486..84.486 rows=7614720 loops=1)
Q13,4.3,Sort  (cost=2670928.88..2670929.38 rows=200 width=8) (actual time=87968.298..87968.300 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=2670919.23..2670921.23 rows=200 width=8) (actual time=87968.231..87968.237 rows=46 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17747.61 rows=1763961 width=0) (actual time=85.144..85.144 rows=7682560 loops=1)
Q17,3.5,->  Nested Loop  (cost=215.02..337657.74 rows=59387 width=4) (actual time=4.267..677.929 rows=16875 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.77..53.61 rows=10 width=12) (actual time=0.019..0.046 rows=3 loops=6219)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..733186.46 rows=97701662 width=0) (actual time=419.068..419.068 rows=32322560 loops=1)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..167319.91 rows=22294922 width=0) (actual time=85.059..85.059 rows=7682560 loops=1)
Q22,2.3,Sort  (cost=2456605.86..2456605.87 rows=3 width=20) (actual time=33482.687..33482.688 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2298034.11..2298034.15 rows=3 width=20) (actual time=33482.648..33482.651 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.044..0.061 rows=2 loops=18997)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..6008.80 rows=598880 width=0) (actual time=13.049..13.049 rows=1216000 loops=1)
Q16,2.0,->  Sort  (cost=1224140.38..1228582.98 rows=1777037 width=40) (actual time=29640.904..30093.790 rows=3558898 loops=1)
Q16,2.0,->  Hash Join  (cost=164041.38..1039674.68 rows=1777037 width=40) (actual time=3452.761..17557.746 rows=3558898 loops=1)
Q12,2.0,Sort  (cost=9511489.97..9511489.97 rows=1 width=27) (actual time=94436.652..94436.652 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9511489.95..9511489.96 rows=1 width=27) (actual time=94436.616..94436.617 rows=2 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812872.49 rows=11999789 width=8) (actual time=1.314..9250.487 rows=23987600 loops=1)
Q10,1.9,->  Hash Join  (cost=834898.52..6583219.07 rows=1737513 width=12) (actual time=19020.189..84782.637 rows=3438488 loops=1)
Q10,1.9,->  Hash Join  (cost=1041986.09..6844603.92 rows=1737513 width=176) (actual time=23315.813..92830.607 rows=3438488 loops=1)
Q10,1.9,->  Hash Join  (cost=1041984.52..6820711.55 rows=1737513 width=154) (actual time=23315.783..91564.175 rows=3438488 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5506879.65 rows=60659964 width=8) (actual time=0.014..56378.894 rows=113799629 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7358673.34 rows=1185304 width=38) (actual time=118.614..107060.541 rows=2196144 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5765810.63 rows=2426399 width=34) (actual time=118.555..79161.856 rows=4549944 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..546814.83 rows=54639083 width=0) (actual time=377.789..377.789 rows=32066560 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.032..0.056 rows=4 loops=18997)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.030..0.048 rows=4 loops=18997)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.023..0.025 rows=4 loops=18997)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..789.39 rows=2 width=8) (actual time=0.442..0.512 rows=3 loops=65089)
Q1,1.5,Sort  (cost=12532617.81..12532617.83 rows=6 width=20) (actual time=270090.698..270090.699 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12532617.63..12532617.74 rows=6 width=20) (actual time=270090.651..270090.653 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=6888041.74..6905416.87 rows=1737513 width=176) (actual time=99248.954..100038.903 rows=1149198 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..80807.88 rows=10759984 width=0) (actual time=84.998..84.998 rows=7614720 loops=1)
Q20,1.4,->  Nested Loop  (cost=2027.99..47509821.87 rows=120879 width=4) (actual time=44.739..34235.486 rows=177151 loops=1)
Q20,1.4,->  Hash  (cost=47509821.87..47509821.87 rows=120879 width=4) (actual time=34361.498..34361.498 rows=177151 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17938.20 rows=1791820 width=0) (actual time=12.864..12.864 rows=1216000 loops=1)
Q9,1.3,GroupAggregate  (cost=3518653.92..3518658.61 rows=134 width=46) (actual time=495889.968..506957.476 rows=175 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8611.83 rows=419280 width=0) (actual time=2171.367..2171.367 rows=572158 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8716.65..125558.75 rows=419280 width=24) (actual time=2208.903..3503.377 rows=572158 loops=1)
Q20,1.2,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2012.54 rows=53998 width=0) (actual time=29.962..29.962 rows=65089 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..275937.04 rows=27551304 width=0) (actual time=378.266..378.266 rows=32066560 loops=1)
Q20,1.1,Sort  (cost=47518822.65..47518834.73 rows=4835 width=51) (actual time=34454.762..34455.087 rows=5439 loops=1)
Q20,1.1,->  Hash Semi Join  (cost=47511437.86..47518526.76 rows=4835 width=51) (actual time=34362.737..34449.940 rows=5439 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.013..7197.888 rows=24000000 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..196567.00 rows=324314 width=4) (actual time=0.008..2589.122 rows=325974 loops=1)
Q9,1.0,->  Hash Join  (cost=200620.92..1056456.45 rows=1297233 width=16) (actual time=2716.329..15022.167 rows=1303896 loops=1)
Q9,1.0,->  Hash  (cost=196567.00..196567.00 rows=324314 width=4) (actual time=2714.304..2714.304 rows=325974 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.350..6283.417 rows=901465 loops=1)
Q8,1.0,->  Nested Loop  (cost=1204.10..5087252.55 rows=356753 width=20) (actual time=24.658..45450.196 rows=367184 loops=1)
Q8,1.0,->  Nested Loop  (cost=1203.53..4361193.94 rows=1171761 width=16) (actual time=24.454..19206.141 rows=1208918 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..109.33 rows=31 width=20) (actual time=0.030..0.453 rows=30 loops=40319)
Q8,1.0,->  Hash Join  (cost=14493.10..5105446.90 rows=356753 width=20) (actual time=191.518..45938.377 rows=367184 loops=1)
Q8,1.0,->  Hash Join  (cost=127449.29..5221792.26 rows=71351 width=38) (actual time=6768.976..52867.839 rows=73718 loops=1)
Q8,1.0,->  Hash Join  (cost=127447.73..5220452.86 rows=71351 width=16) (actual time=6768.926..52742.033 rows=73718 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=6572.875..6572.875 rows=901465 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1193.21 rows=39020 width=0) (actual time=15.736..15.736 rows=40319 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1202.96..83136.46 rows=39020 width=4) (actual time=24.393..478.664 rows=40319 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.291..1225.267 rows=180293 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1213477.98 rows=45135398 width=8) (actual time=0.047..9395.744 rows=45045000 loops=1)
Q7,1.0,->  Hash Join  (cost=571680.00..4846406.07 rows=4371127 width=42) (actual time=545.484..92223.706 rows=4382772 loops=1)
Q7,1.0,->  Hash Join  (cost=2211471.84..6526884.71 rows=181909 width=64) (actual time=28891.173..123476.555 rows=175362 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1594656.44 rows=3610832 width=30) (actual time=2091.100..26731.451 rows=3603944 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.042..1958.292 rows=360174 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.040..156.715 rows=23981 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2088.649..2088.649 rows=360174 loops=1)
Q7,1.0,->  Hash  (cost=1594656.44..1594656.44 rows=3610832 width=30) (actual time=28326.336..28326.336 rows=3603944 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=165.067..165.067 rows=23981 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=560474.60..4586592.84 rows=54639083 width=20) (actual time=380.271..74583.530 rows=54745870 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=276539.96..4102976.30 rows=2411688 width=8) (actual time=380.824..76501.717 rows=2390415 loops=1)
Q5,1.0,->  Nested Loop  (cost=195477.58..6609579.36 rows=5449565 width=46) (actual time=6848.029..53336.606 rows=5451577 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.387..6401.497 rows=899362 loops=1)
Q5,1.0,->  Hash Join  (cost=209516.58..6666669.93 rows=217983 width=34) (actual time=7070.947..55800.039 rows=218589 loops=1)
Q5,1.0,->  Hash Join  (cost=195477.01..1157410.18 rows=1362414 width=38) (actual time=6847.985..28348.468 rows=1363213 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=6757.236..6757.236 rows=899362 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=82510.90..1005274.66 rows=6812071 width=8) (actual time=85.537..17324.047 rows=6835644 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.255..1247.965 rows=179872 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=18038.27..805641.70 rows=1749295 width=20) (actual time=85.009..18281.190 rows=1721982 loops=1)
Q3,1.0,->  Hash Join  (cost=322041.92..1497096.26 rows=4456086 width=12) (actual time=1233.747..26201.051 rows=4399022 loops=1)
Q3,1.0,->  Hash  (cost=1497096.26..1497096.26 rows=4456086 width=12) (actual time=27952.753..27952.753 rows=4399022 loops=1)
Q3,1.0,->  Hash  (cost=137905.59..137905.59 rows=899415 width=4) (actual time=1143.611..1143.611 rows=901110 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20602.04 rows=899415 width=0) (actual time=200.665..200.665 rows=901110 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=172893.64..1219781.17 rows=22294922 width=16) (actual time=85.563..15976.392 rows=21995893 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=757611.88..5211013.65 rows=97701662 width=12) (actual time=421.614..62163.862 rows=96513022 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20826.90..137905.59 rows=899415 width=4) (actual time=232.645..879.021 rows=901110 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1220735.38 rows=45405338 width=4) (actual time=0.035..11315.004 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1220735.38..1220735.38 rows=45405338 width=4) (actual time=22231.395..22231.395 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1974383.75..2296679.89 rows=180562 width=20) (actual time=24582.898..33407.155 rows=190576 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19584.59 rows=1143141 width=0) (actual time=306.379..306.379 rows=1144711 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19870.37..155713.82 rows=1143141 width=4) (actual time=340.679..1735.279 rows=1144711 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.701..114.398 rows=11993 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=118.424..118.424 rows=11993 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.686..112.330 rows=11993 loops=1)
Q2,1.0,->  Sort  (cost=1431183.48..1443166.50 rows=4793205 width=168) (actual time=24446.825..25991.213 rows=4810094 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.012..5854.492 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.743..441.548 rows=60128 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=24282 width=30) (actual time=0.089..3730.760 rows=23781 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899316.06 rows=4793205 width=168) (actual time=476.574..14926.234 rows=4810240 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=476.193..476.193 rows=60128 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.666..85.055 rows=12026 loops=5)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.700..82.452 rows=11994 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.683..80.631 rows=11994 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2027.55..99528.01 rows=60058 width=4) (actual time=43.951..789.389 rows=65089 loops=1)
Q19,1.0,->  Nested Loop  (cost=38420.82..1832716.28 rows=3410 width=8) (actual time=107.459..7590.280 rows=3432 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11970.80 rows=1195080 width=0) (actual time=12.883..12.883 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..834.59 rows=24035 width=0) (actual time=10.677..10.677 rows=23969 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..831.51 rows=23728 width=0) (actual time=11.040..11.040 rows=24067 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..813.75 rows=23551 width=0) (actual time=10.870..10.870 rows=23861 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38420.25..79403.95 rows=14227 width=30) (actual time=104.928..855.353 rows=14360 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1218316.78 rows=45315378 width=16) (actual time=0.008..8870.687 rows=45045000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5031898.08 rows=181258308 width=8) (actual time=0.005..34148.814 rows=180178984 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5031898.08 rows=181258308 width=8) (actual time=0.034..46312.159 rows=180178984 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.022..0.039 rows=30 loops=6219)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.022..0.039 rows=30 loops=6219)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..203.77 rows=5921 width=0) (actual time=2.671..2.671 rows=6219 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=205.25..19636.09 rows=5921 width=4) (actual time=3.836..95.001 rows=6219 loops=1)
Q16,1.0,Sort  (cost=1248680.37..1248749.79 rows=27767 width=40) (actual time=31899.811..31902.814 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=152925.94..152925.94 rows=888534 width=40) (actual time=3448.047..3448.047 rows=890191 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1224140.38..1246631.02 rows=27767 width=40) (actual time=29641.011..31845.195 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7422.94..152925.94 rows=888534 width=40) (actual time=99.966..3094.884 rows=890191 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5961829.38 rows=6837548 width=12) (actual time=0.026..55667.828 rows=6732720 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..5961829.38 rows=6837548 width=12) (actual time=0.033..56396.351 rows=6732720 loops=1)
Q14,1.0,->  Hash Join  (cost=280656.82..3459325.75 rows=2308861 width=29) (actual time=5201.407..73715.803 rows=2322159 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=24089.82..3156581.53 rows=2308861 width=12) (actual time=388.092..66620.833 rows=2322159 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1336892.23 rows=45086267 width=8) (actual time=0.031..22573.967 rows=44514103 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2332987.90 rows=45086267 width=8) (actual time=3220.976..54990.390 rows=46014182 loops=1)
Q12,1.0,->  Sort  (cost=7413966.76..7416176.22 rows=883782 width=15) (actual time=71893.963..72030.651 rows=933997 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7326678.57 rows=883782 width=15) (actual time=0.074..71267.515 rows=933997 loops=1)
Q12,1.0,->  Merge Join  (cost=7413979.83..9496023.76 rows=883782 width=27) (actual time=71893.992..93536.491 rows=933997 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1955062.03 rows=45495298 width=20) (actual time=0.008..16447.938 rows=44999991 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.019..5354.079 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=16) (actual time=0.017..5464.832 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.768..113.752 rows=11969 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.716..76.814 rows=11969 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=8) (actual time=80.087..9615.226 rows=957520 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=12) (actual time=117.321..9809.760 rows=957520 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=79.958..79.958 rows=11969 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=117.218..117.218 rows=11969 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.690..74.937 rows=11969 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.744..111.811 rows=11969 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5468692.55 rows=176598127 width=20) (actual time=0.012..57885.868 rows=176051738 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5506879.65 rows=44813154 width=12) (actual time=0.011..54252.520 rows=44419494 loops=1)
Q10,1.0,->  Hash  (cost=812849.01..812849.01 rows=1763961 width=8) (actual time=19011.298..19011.298 rows=1719981 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=18188.60..812849.01 rows=1763961 width=8) (actual time=85.675..18340.413 rows=1719981 loops=1)
