Q21,2156215.0,->  Nested Loop Semi Join  (cost=7193.26..10068676.63 rows=1 width=34) (actual time=117.559..125861.843 rows=2156215 loops=1)
Q3,952527.4,->  Sort  (cost=8045833.07..8069646.26 rows=9525274 width=20) (actual time=109707.583..109707.587 rows=10 loops=1)
Q18,902692.9,->  GroupAggregate  (cost=36092801.97..38575207.47 rows=90269291 width=39) (actual time=253020.310..253020.642 rows=100 loops=1)
Q18,128772.1,->  Sort  (cost=36092801.97..36318475.20 rows=90269291 width=39) (actual time=253020.299..253020.346 rows=701 loops=1)
Q21,120610.0,->  Nested Loop Anti Join  (cost=7193.83..10068679.72 rows=1 width=26) (actual time=118.306..134477.487 rows=120610 loops=1)
Q10,86875.6,->  Sort  (cost=6951651.47..6955995.25 rows=1737513 width=176) (actual time=101241.481..101241.482 rows=20 loops=1)
Q18,81471.8,->  Hash Join  (cost=6273715.34..8094819.69 rows=22567699 width=39) (actual time=144758.009..162978.953 rows=277 loops=1)
Q18,81471.8,->  Hash Join  (cost=6066629.34..7492798.96 rows=22567699 width=20) (actual time=141426.130..159646.008 rows=277 loops=1)
Q18,81471.8,->  Hash  (cost=8094819.69..8094819.69 rows=22567699 width=39) (actual time=162980.306..162980.306 rows=277 loops=1)
Q9,78813.0,->  Sort  (cost=3335645.40..3335645.71 rows=124 width=46) (actual time=487183.634..492050.046 rows=9772818 loops=1)
Q9,78813.0,->  Nested Loop  (cost=200322.18..3335637.20 rows=124 width=24) (actual time=2950.303..403684.974 rows=9772818 loops=1)
Q9,78813.0,->  Nested Loop  (cost=200321.62..3335560.99 rows=124 width=24) (actual time=2950.282..206666.094 rows=9772818 loops=1)
Q9,78813.0,->  Nested Loop  (cost=200321.20..3335504.86 rows=124 width=28) (actual time=2950.263..166503.410 rows=9772818 loops=1)
Q9,78813.0,->  Hash Join  (cost=200323.74..3335641.09 rows=124 width=46) (actual time=2950.358..415577.207 rows=9772818 loops=1)
Q18,46554.5,->  Hash Join  (cost=8553226.93..21696437.34 rows=90269291 width=39) (actual time=163316.269..253017.875 rows=1939 loops=1)
Q18,15680.1,->  Hash  (cost=6012336.98..6012336.98 rows=4343389 width=4) (actual time=141355.015..141355.015 rows=277 loops=1)
Q18,15680.1,->  HashAggregate  (cost=5914610.73..5968903.09 rows=4343389 width=8) (actual time=123321.472..141354.284 rows=277 loops=1)
Q2,14121.0,->  Merge Join  (cost=1431184.22..3089398.37 rows=1 width=190) (actual time=22906.081..30270.288 rows=14121 loops=1)
Q21,12201.0,->  HashAggregate  (cost=10068679.73..10068679.74 rows=1 width=26) (actual time=134648.585..134651.807 rows=12201 loops=1)
Q15,11257.0,->  Subquery Scan on revenue10  (cost=4508839.38..4509092.66 rows=11257 width=12) (actual time=150599.837..150627.571 rows=1 loops=1)
Q15,11257.0,->  Sort  (cost=4509850.18..4509878.32 rows=11257 width=12) (actual time=150627.591..150627.592 rows=1 loops=1)
Q15,11257.0,Merge Join  (cost=8968046.14..8983309.93 rows=11257 width=79) (actual time=150641.414..150641.416 rows=1 loops=1)
Q15,11257.0,->  HashAggregate  (cost=4508839.38..4508980.09 rows=11257 width=12) (actual time=150599.835..150627.568 rows=1 loops=1)
Q7,764.2,Sort  (cost=6563228.71..6563236.35 rows=3057 width=64) (actual time=116257.410..116257.411 rows=4 loops=1)
Q7,764.2,->  HashAggregate  (cost=6563005.89..6563051.74 rows=3057 width=64) (actual time=116257.340..116257.349 rows=4 loops=1)
Q8,366.5,Sort  (cost=5460323.84..5460325.67 rows=733 width=38) (actual time=51690.751..51690.751 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5460276.13..5460288.96 rows=733 width=38) (actual time=51690.707..51690.709 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10068679.75..10068679.75 rows=1 width=26) (actual time=134654.583..134654.590 rows=100 loops=1)
Q21,100.0,Limit  (cost=10068679.75..10068679.75 rows=1 width=26) (actual time=134654.584..134654.599 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3089398.38..3089398.39 rows=1 width=190) (actual time=30284.391..30284.409 rows=100 loops=1)
Q2,100.0,Limit  (cost=3089398.38..3089398.39 rows=1 width=190) (actual time=30284.392..30284.421 rows=100 loops=1)
Q21,42.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.76 rows=42 width=8) (actual time=0.006..0.006 rows=1 loops=2237694)
Q11,33.7,Sort  (cost=1850476.53..1852873.13 rows=958641 width=12) (actual time=21409.801..21413.268 rows=28415 loops=1)
Q11,33.7,->  HashAggregate  (cost=876417.95..888400.97 rows=958641 width=12) (actual time=21133.349..21393.218 rows=28415 loops=1)
Q3,28.0,->  HashAggregate  (cost=7744742.58..7839995.32 rows=9525274 width=20) (actual time=109494.404..109644.597 rows=339578 loops=1)
Q15,26.6,->  HashAggregate  (cost=4457942.25..4458054.82 rows=11257 width=12) (actual time=72961.208..73061.828 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.80 rows=14 width=4) (actual time=0.013..0.013 rows=1 loops=1685724)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.76 rows=14 width=8) (actual time=0.003..0.003 rows=1 loops=2156215)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23537.66 rows=2311366 width=0) (actual time=382.032..382.032 rows=32322560 loops=1)
Q5,10.5,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.57 rows=42 width=16) (actual time=0.014..0.016 rows=4 loops=1363052)
Q3,10.5,->  Hash Join  (cost=2309778.65..7601863.47 rows=9525274 width=20) (actual time=29824.858..108627.268 rows=899168 loops=1)
Q15,10.4,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.081..10.994 rows=28817 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7241.91 rows=962920 width=0) (actual time=101.324..101.324 rows=9728000 loops=1)
Q4,9.5,->  Nested Loop Semi Join  (cost=17571.03..2738162.93 rows=162646 width=16) (actual time=85.856..39919.068 rows=1545669 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.89 rows=1 width=24) (actual time=0.019..0.113 rows=7 loops=1303748)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.218..11.218 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.185..11.185 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.651..0.651 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.672..0.672 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.781..0.781 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.681..0.681 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.664..0.664 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.035..1.248 rows=155 loops=1)
Q5,5.0,Sort  (cost=7188560.53..7188560.60 rows=25 width=34) (actual time=51196.818..51196.818 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=7188559.70..7188559.95 rows=25 width=34) (actual time=51196.771..51196.773 rows=5 loops=1)
Q4,5.0,Sort  (cost=2738976.18..2738976.18 rows=1 width=16) (actual time=40822.690..40822.691 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2738976.16..2738976.17 rows=1 width=16) (actual time=40822.645..40822.646 rows=5 loops=1)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17144.54 rows=1703654 width=0) (actual time=85.299..85.299 rows=7682560 loops=1)
Q13,4.4,Sort  (cost=2669640.86..2669641.36 rows=200 width=8) (actual time=85507.437..85507.439 rows=45 loops=1)
Q13,4.4,->  HashAggregate  (cost=2669631.21..2669633.21 rows=200 width=8) (actual time=85507.374..85507.383 rows=45 loops=1)
Q10,4.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17747.61 rows=1763961 width=0) (actual time=85.390..85.390 rows=7682560 loops=1)
Q17,3.6,->  Nested Loop  (cost=213.61..329901.25 rows=58119 width=4) (actual time=4.248..687.487 rows=15896 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.77..53.62 rows=10 width=12) (actual time=0.020..0.049 rows=3 loops=5933)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..737186.90 rows=98235054 width=0) (actual time=388.497..388.497 rows=32322560 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..166189.17 rows=22144156 width=0) (actual time=85.194..85.194 rows=7682560 loops=1)
Q22,2.3,Sort  (cost=2459000.16..2459000.16 rows=3 width=20) (actual time=33840.032..33840.033 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2300274.96..2300275.00 rows=3 width=20) (actual time=33839.987..33839.989 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.045..0.063 rows=2 loops=19204)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..6008.80 rows=598880 width=0) (actual time=12.996..12.996 rows=1216000 loops=1)
Q12,2.0,Sort  (cost=9451784.78..9451784.78 rows=1 width=27) (actual time=94863.066..94863.066 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9451784.76..9451784.77 rows=1 width=27) (actual time=94863.026..94863.028 rows=2 loops=1)
Q21,1.9,->  Hash Join  (cost=7192.13..5765810.63 rows=2426399 width=34) (actual time=117.475..82815.448 rows=4634022 loops=1)
Q16,1.9,->  Sort  (cost=1225759.82..1230230.69 rows=1788349 width=40) (actual time=30283.573..30824.087 rows=3562215 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812872.49 rows=11999789 width=8) (actual time=1.355..9346.534 rows=23987600 loops=1)
Q16,1.9,->  Hash Join  (cost=164291.59..1040038.02 rows=1788349 width=40) (actual time=3678.471..18187.230 rows=3562215 loops=1)
Q10,1.9,->  Hash Join  (cost=834898.52..6583219.07 rows=1737513 width=12) (actual time=19458.974..85360.039 rows=3441452 loops=1)
Q10,1.9,->  Hash Join  (cost=1041986.09..6844603.92 rows=1737513 width=176) (actual time=24226.733..93833.449 rows=3441452 loops=1)
Q10,1.9,->  Hash Join  (cost=1041984.52..6820711.55 rows=1737513 width=154) (actual time=24226.702..92557.062 rows=3441452 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5506879.65 rows=60659964 width=8) (actual time=0.013..58676.582 rows=113913014 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7358673.34 rows=1185304 width=38) (actual time=117.504..111152.819 rows=2237694 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..549737.86 rows=54931386 width=0) (actual time=384.811..384.811 rows=32238080 loops=1)
Q15,1.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..395298.94 rows=52649993 width=0) (actual time=380.554..380.554 rows=32034560 loops=1)
Q15,1.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..395298.94 rows=52649993 width=0) (actual time=376.421..376.421 rows=32066560 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.033..0.059 rows=4 loops=19204)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.031..0.050 rows=4 loops=19204)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.024..0.026 rows=4 loops=19204)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..789.10 rows=2 width=8) (actual time=0.434..0.505 rows=3 loops=65084)
Q1,1.5,Sort  (cost=12571740.92..12571740.94 rows=6 width=20) (actual time=275118.903..275118.904 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12571740.74..12571740.85 rows=6 width=20) (actual time=275118.851..275118.853 rows=4 loops=1)
Q10,1.5,->  HashAggregate  (cost=6888041.74..6905416.87 rows=1737513 width=176) (actual time=100082.564..100824.187 rows=1148610 loops=1)
Q9,1.4,GroupAggregate  (cost=3335645.40..3335649.74 rows=124 width=46) (actual time=487219.609..498213.482 rows=175 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17938.20 rows=1791820 width=0) (actual time=12.873..12.873 rows=1216000 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8622.82 rows=420380 width=0) (actual time=2164.966..2164.966 rows=573478 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8727.91..125598.89 rows=420380 width=24) (actual time=2199.966..3701.657 rows=573478 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.49..52236850.09 rows=132967 width=4) (actual time=45.678..33787.586 rows=177302 loops=1)
Q20,1.3,->  Hash  (cost=52236850.09..52236850.09 rows=132967 width=4) (actual time=33906.624..33906.624 rows=177302 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..274970.91 rows=27454691 width=0) (actual time=376.675..376.675 rows=32002560 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.014..7253.259 rows=24000000 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..196567.00 rows=300290 width=4) (actual time=0.012..2816.980 rows=325937 loops=1)
Q9,1.0,->  Hash Join  (cost=200320.62..1055195.21 rows=1201139 width=16) (actual time=2950.225..15606.692 rows=1303748 loops=1)
Q9,1.0,->  Hash  (cost=196567.00..196567.00 rows=300290 width=4) (actual time=2947.772..2947.772 rows=325937 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.477..6368.781 rows=899395 loops=1)
Q8,1.0,->  Nested Loop  (cost=1262.36..5308067.49 rows=377310 width=20) (actual time=22.486..43957.217 rows=360898 loops=1)
Q8,1.0,->  Nested Loop  (cost=1261.79..4540136.74 rows=1239283 width=16) (actual time=22.411..18223.675 rows=1189341 loops=1)
Q8,1.0,->  Nested Loop  (cost=114217.41..5457350.42 rows=75462 width=16) (actual time=6702.422..51441.519 rows=72169 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..108.71 rows=31 width=20) (actual time=0.029..0.436 rows=30 loops=39668)
Q8,1.0,->  Hash Join  (cost=114218.97..5458766.89 rows=75462 width=38) (actual time=6702.465..51566.680 rows=72169 loops=1)
Q8,1.0,->  Hash Join  (cost=114216.99..5423191.65 rows=75462 width=16) (actual time=6702.409..50892.837 rows=72169 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=6674.396..6674.396 rows=899395 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1251.01 rows=40860 width=0) (actual time=14.251..14.251 rows=39668 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1261.22..85403.61 rows=40860 width=4) (actual time=22.336..460.667 rows=39668 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.296..1243.481 rows=179879 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1219525.28 rows=45360328 width=8) (actual time=0.059..9150.214 rows=45000000 loops=1)
Q7,1.0,->  Hash Join  (cost=574676.10..4872270.70 rows=4394511 width=42) (actual time=526.771..87019.769 rows=4360328 loops=1)
Q7,1.0,->  Hash Join  (cost=2221763.60..6560262.66 rows=182882 width=64) (actual time=27410.389..115980.389 rows=173931 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1601727.17 rows=3628826 width=30) (actual time=2759.319..25591.805 rows=3590381 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.045..2616.557 rows=359178 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.047..131.579 rows=23906 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2757.278..2757.278 rows=359178 loops=1)
Q7,1.0,->  Hash  (cost=1601727.17..1601727.17 rows=3628826 width=30) (actual time=26871.550..26871.550 rows=3590381 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=139.085..139.085 rows=23906 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=563470.70..4611127.49 rows=54931386 width=20) (actual time=387.363..72250.771 rows=54687368 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=275567.54..4093434.09 rows=2386522 width=8) (actual time=379.336..79777.123 rows=2383471 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..1450630.47 rows=6930383 width=8) (actual time=0.034..14561.290 rows=6825168 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.359..6683.177 rows=899395 loops=1)
Q5,1.0,->  Nested Loop  (cost=112966.68..7128503.26 rows=5544267 width=46) (actual time=7059.826..48636.973 rows=5453992 loops=1)
Q5,1.0,->  Hash Join  (cost=127005.68..7186341.98 rows=221772 width=34) (actual time=7263.807..50934.345 rows=217149 loops=1)
Q5,1.0,->  Hash Join  (cost=112966.11..1603446.29 rows=1386077 width=38) (actual time=7059.753..25077.472 rows=1363052 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=7055.104..7055.104 rows=899395 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.262..1305.075 rows=179879 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17570.46..811326.27 rows=1703654 width=20) (actual time=85.835..17002.420 rows=1685724 loops=1)
Q3,1.0,->  Hash Join  (cost=320732.70..1492890.35 rows=4411411 width=12) (actual time=2031.648..27826.558 rows=4375982 loops=1)
Q3,1.0,->  Hash  (cost=1492890.35..1492890.35 rows=4411411 width=12) (actual time=29401.775..29401.775 rows=4375982 loops=1)
Q3,1.0,->  Hash  (cost=137801.75..137801.75 rows=896460 width=4) (actual time=1942.538..1942.538 rows=900509 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20535.88 rows=896460 width=0) (actual time=205.783..205.783 rows=900509 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=171725.21..1216728.16 rows=22144156 width=16) (actual time=85.711..15641.974 rows=21845606 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=761745.67..5221814.84 rows=98235054 width=12) (actual time=391.024..63294.532 rows=97112296 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20760.00..137801.75 rows=896460 width=4) (actual time=237.692..1668.452 rows=900509 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1221943.88 rows=45450288 width=4) (actual time=0.032..11529.621 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1221943.88..1221943.88 rows=45450288 width=4) (actual time=22160.338..22160.338 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1976341.39..2298917.19 rows=181036 width=20) (actual time=24500.646..33764.820 rows=191401 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19651.06 rows=1146140 width=0) (actual time=299.087..299.087 rows=1146255 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19937.59..155859.77 rows=1146140 width=4) (actual time=333.345..1730.799 rows=1146255 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.703..113.381 rows=12202 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=117.371..117.371 rows=12202 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.690..111.356 rows=12202 loops=1)
Q2,1.0,->  Sort  (cost=1431183.48..1443166.50 rows=4793205 width=168) (actual time=22905.360..24481.229 rows=4814835 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.013..5990.766 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.735..440.129 rows=60186 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=23667 width=30) (actual time=0.056..3715.612 rows=23914 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899316.06 rows=4793205 width=168) (actual time=475.447..15569.344 rows=4814880 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=475.144..475.144 rows=60186 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.668..85.444 rows=12037 loops=5)
Q20,1.0,Sort  (cost=52246053.93..52246067.23 rows=5319 width=51) (actual time=34002.106..34002.411 rows=5294 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.817..82.214 rows=11969 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=52238617.18..52245724.76 rows=5319 width=51) (actual time=33908.714..33995.336 rows=5294 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.54 rows=59998 width=0) (actual time=30.696..30.696 rows=65084 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.800..80.393 rows=11969 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.05..104662.28 rows=66064 width=4) (actual time=44.906..822.516 rows=65084 loops=1)
Q19,1.0,->  Nested Loop  (cost=38449.79..1857549.82 rows=3464 width=8) (actual time=106.475..7543.541 rows=3353 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11970.80 rows=1195080 width=0) (actual time=12.892..12.892 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..858.03 rows=24779 width=0) (actual time=10.695..10.695 rows=24040 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..832.03 rows=23779 width=0) (actual time=10.801..10.801 rows=23875 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..814.23 rows=23601 width=0) (actual time=10.931..10.931 rows=24113 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.025..0.025 rows=30 loops=14423)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38445.04..79965.76 rows=14464 width=30) (actual time=105.227..842.202 rows=14423 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1213477.98 rows=45135398 width=16) (actual time=0.033..8521.248 rows=45045000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5011917.82 rows=180538582 width=8) (actual time=0.008..32588.697 rows=180178836 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5011917.82 rows=180538582 width=8) (actual time=0.014..45714.069 rows=180178836 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.024..0.043 rows=30 loops=5933)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.024..0.043 rows=30 loops=5933)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..202.39 rows=5783 width=0) (actual time=2.770..2.770 rows=5933 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=203.83..19233.40 rows=5783 width=4) (actual time=3.837..92.889 rows=5933 loops=1)
Q16,1.0,Sort  (cost=1250457.32..1250527.18 rows=27944 width=40) (actual time=32727.663..32731.302 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=153105.46..153105.46 rows=894190 width=40) (actual time=3673.687..3673.687 rows=891018 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1225759.82..1248393.62 rows=27944 width=40) (actual time=30283.728..32670.322 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7465.46..153105.46 rows=894190 width=40) (actual time=101.432..3307.820 rows=891018 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=396995.51..4390079.41 rows=6786284 width=12) (actual time=378.960..66626.066 rows=6739443 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=396995.51..4390079.41 rows=6786284 width=12) (actual time=383.139..70618.026 rows=6739443 loops=1)
Q14,1.0,->  Hash Join  (cost=280682.50..3464774.03 rows=2311366 width=29) (actual time=4948.078..74973.796 rows=2321882 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=24115.50..3161979.71 rows=2311366 width=12) (actual time=384.609..67728.984 rows=2321882 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1335569.60 rows=45087805 width=8) (actual time=0.030..24179.838 rows=44560025 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2331692.19 rows=45087805 width=8) (actual time=3173.211..55132.695 rows=46060102 loops=1)
Q12,1.0,->  Sort  (cost=7369693.24..7371885.79 rows=877020 width=15) (actual time=73281.839..73413.693 rows=935083 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7283121.49 rows=877020 width=15) (actual time=0.171..72674.664 rows=935083 loops=1)
Q12,1.0,->  Merge Join  (cost=7369706.20..9436436.91 rows=877020 width=27) (actual time=73281.871..93972.943 rows=935083 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1940524.83 rows=45225418 width=20) (actual time=0.008..15517.109 rows=44999992 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.020..5565.871 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=16) (actual time=0.015..5578.846 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.736..119.702 rows=11959 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.714..80.771 rows=11959 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=8) (actual time=84.068..10007.569 rows=956720 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=12) (actual time=123.436..10038.881 rows=956720 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=83.941..83.941 rows=11959 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=123.333..123.333 rows=11959 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.683..78.848 rows=11959 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.706..117.618 rows=11959 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5479588.30 rows=177303811 width=20) (actual time=0.014..59830.762 rows=176402269 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5506879.65 rows=44813154 width=12) (actual time=0.028..54006.453 rows=44419494 loops=1)
Q10,1.0,->  Hash  (cost=812849.01..812849.01 rows=1763961 width=8) (actual time=19449.232..19449.232 rows=1720571 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=18188.60..812849.01 rows=1763961 width=8) (actual time=85.925..18619.049 rows=1720571 loops=1)
