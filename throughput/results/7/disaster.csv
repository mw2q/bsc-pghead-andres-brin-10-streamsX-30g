Q21,2103996.0,->  Nested Loop Semi Join  (cost=7193.26..9998543.52 rows=1 width=34) (actual time=121.145..127296.989 rows=2103996 loops=1)
Q3,955708.2,->  Sort  (cost=8031284.91..8055177.61 rows=9557082 width=20) (actual time=119777.311..119777.312 rows=10 loops=1)
Q18,900892.3,->  GroupAggregate  (cost=36020320.14..38497774.02 rows=90089232 width=39) (actual time=241633.682..241634.011 rows=100 loops=1)
Q18,128515.3,->  Sort  (cost=36020320.14..36245543.22 rows=90089232 width=39) (actual time=241633.670..241633.715 rows=701 loops=1)
Q21,118044.0,->  Nested Loop Anti Join  (cost=7193.83..9998546.61 rows=1 width=26) (actual time=124.493..135788.045 rows=118044 loops=1)
Q10,83534.2,->  Sort  (cost=6942216.42..6946393.13 rows=1670685 width=176) (actual time=95768.828..95768.830 rows=20 loops=1)
Q18,81309.4,->  Hash Join  (cost=6261917.59..8079478.83 rows=22522719 width=39) (actual time=140868.396..159856.469 rows=277 loops=1)
Q18,81309.4,->  Hash Join  (cost=6054831.59..7478245.25 rows=22522719 width=20) (actual time=138140.955..157128.217 rows=277 loops=1)
Q18,81309.4,->  Hash  (cost=8079478.83..8079478.83 rows=22522719 width=39) (actual time=159859.491..159859.491 rows=277 loops=1)
Q9,58353.1,->  Sort  (cost=4160537.24..4160537.66 rows=168 width=46) (actual time=497903.601..502971.184 rows=9803337 loops=1)
Q9,58353.1,->  Nested Loop  (cost=201673.49..4160526.32 rows=168 width=24) (actual time=2929.022..412227.235 rows=9803337 loops=1)
Q9,58353.1,->  Nested Loop  (cost=201672.93..4160423.05 rows=168 width=24) (actual time=2928.979..212888.381 rows=9803337 loops=1)
Q9,58353.1,->  Nested Loop  (cost=201672.51..4160347.01 rows=168 width=28) (actual time=2928.959..172495.366 rows=9803337 loops=1)
Q9,58353.1,->  Hash Join  (cost=201675.06..4160531.03 rows=168 width=46) (actual time=2929.078..424170.711 rows=9803337 loops=1)
Q18,46461.6,->  Hash Join  (cost=8536971.82..21653966.82 rows=90089232 width=39) (actual time=160743.809..241630.654 rows=1939 loops=1)
Q18,15680.1,->  Hash  (cost=6000539.23..6000539.23 rows=4343389 width=4) (actual time=137982.277..137982.277 rows=277 loops=1)
Q18,15680.1,->  HashAggregate  (cost=5902812.97..5957105.34 rows=4343389 width=8) (actual time=118977.690..137981.732 rows=277 loops=1)
Q2,14192.0,->  Merge Join  (cost=1431184.22..3128978.97 rows=1 width=190) (actual time=22609.511..30516.134 rows=14192 loops=1)
Q21,11902.0,->  HashAggregate  (cost=9998546.62..9998546.63 rows=1 width=26) (actual time=135952.216..135955.368 rows=11902 loops=1)
Q15,11284.0,->  Subquery Scan on revenue7  (cost=6081947.23..6082201.12 rows=11284 width=12) (actual time=120440.767..120502.525 rows=1 loops=1)
Q15,11284.0,->  Sort  (cost=6082960.64..6082988.85 rows=11284 width=12) (actual time=120502.544..120502.545 rows=1 loops=1)
Q15,11284.0,Merge Join  (cost=12113683.12..12128947.31 rows=11284 width=79) (actual time=120536.901..120536.903 rows=1 loops=1)
Q15,11284.0,->  HashAggregate  (cost=6081947.23..6082088.28 rows=11284 width=12) (actual time=120440.766..120502.523 rows=1 loops=1)
Q7,764.2,Sort  (cost=6580454.12..6580461.77 rows=3057 width=64) (actual time=110737.522..110737.523 rows=4 loops=1)
Q7,764.2,->  HashAggregate  (cost=6580231.30..6580277.15 rows=3057 width=64) (actual time=110737.456..110737.463 rows=4 loops=1)
Q8,366.5,Sort  (cost=5354253.47..5354255.30 rows=733 width=38) (actual time=62265.017..62265.018 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5354205.76..5354218.59 rows=733 width=38) (actual time=62264.976..62264.977 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=9998546.64..9998546.64 rows=1 width=26) (actual time=135958.119..135958.126 rows=100 loops=1)
Q21,100.0,Limit  (cost=9998546.64..9998546.64 rows=1 width=26) (actual time=135958.121..135958.140 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3128978.98..3128978.99 rows=1 width=190) (actual time=30530.860..30530.872 rows=100 loops=1)
Q2,100.0,Limit  (cost=3128978.98..3128978.99 rows=1 width=190) (actual time=30530.861..30530.886 rows=100 loops=1)
Q21,42.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.76 rows=42 width=8) (actual time=0.006..0.006 rows=1 loops=2182994)
Q11,34.6,Sort  (cost=1850476.53..1852873.13 rows=958641 width=12) (actual time=22311.868..22315.269 rows=27650 loops=1)
Q11,34.6,->  HashAggregate  (cost=876417.95..888400.97 rows=958641 width=12) (actual time=22028.112..22295.559 rows=27650 loops=1)
Q3,28.0,->  HashAggregate  (cost=7729188.98..7824759.80 rows=9557082 width=20) (actual time=119534.612..119713.295 rows=340249 loops=1)
Q15,26.5,->  HashAggregate  (cost=6030468.15..6030580.99 rows=11284 width=12) (actual time=60069.793..60170.851 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.78 rows=14 width=4) (actual time=0.014..0.014 rows=1 loops=1687418)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.76 rows=14 width=8) (actual time=0.003..0.003 rows=1 loops=2103996)
Q14,13.8,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23833.99 rows=2340999 width=0) (actual time=383.181..383.181 rows=32322560 loops=1)
Q3,10.6,->  Hash Join  (cost=2310024.27..7585832.75 rows=9557082 width=20) (actual time=30417.757..118615.319 rows=899484 loops=1)
Q5,10.5,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.57 rows=42 width=16) (actual time=0.013..0.015 rows=4 loops=1362183)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7218.51 rows=959800 width=0) (actual time=100.112..100.112 rows=9728000 loops=1)
Q4,9.4,->  Nested Loop Semi Join  (cost=17515.24..2727426.29 rows=162932 width=16) (actual time=85.484..43027.125 rows=1547618 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.89 rows=1 width=24) (actual time=0.020..0.117 rows=8 loops=1306000)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.209..11.209 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=12.429..12.429 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.646..0.646 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.713..0.713 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.699..0.699 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.664..0.664 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.662..0.662 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.041..1.223 rows=155 loops=1)
Q5,5.0,Sort  (cost=7188560.53..7188560.60 rows=25 width=34) (actual time=48571.574..48571.574 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=7188559.70..7188559.95 rows=25 width=34) (actual time=48571.529..48571.530 rows=5 loops=1)
Q4,5.0,Sort  (cost=2728240.97..2728240.98 rows=1 width=16) (actual time=43985.867..43985.867 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2728240.95..2728240.96 rows=1 width=16) (actual time=43985.815..43985.816 rows=5 loops=1)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17090.12 rows=1698212 width=0) (actual time=84.920..84.920 rows=7644160 loops=1)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17069.16 rows=1696116 width=0) (actual time=85.285..85.285 rows=7682560 loops=1)
Q13,4.3,Sort  (cost=2669930.55..2669931.05 rows=200 width=8) (actual time=99104.374..99104.377 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=2669920.91..2669922.91 rows=200 width=8) (actual time=99104.308..99104.315 rows=46 loops=1)
Q17,3.7,->  Nested Loop  (cost=219.58..340706.34 rows=60108 width=4) (actual time=4.149..691.349 rows=16157 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.77..53.61 rows=10 width=12) (actual time=0.019..0.047 rows=3 loops=6038)
Q15,3.2,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.044..25.497 rows=90935 loops=1)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..730964.00 rows=97405333 width=0) (actual time=384.442..384.442 rows=32322560 loops=1)
Q3,2.9,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..167885.28 rows=22370304 width=0) (actual time=85.118..85.118 rows=7682560 loops=1)
Q22,2.3,Sort  (cost=2449996.15..2449996.16 rows=3 width=20) (actual time=33729.032..33729.032 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2291537.45..2291537.50 rows=3 width=20) (actual time=33728.991..33728.991 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.052..0.070 rows=2 loops=19213)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..6008.80 rows=598880 width=0) (actual time=13.596..13.596 rows=1216000 loops=1)
Q12,2.0,Sort  (cost=9510566.76..9510566.77 rows=1 width=27) (actual time=94712.617..94712.617 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9510566.74..9510566.75 rows=1 width=27) (actual time=94712.582..94712.582 rows=2 loops=1)
Q16,1.9,->  Sort  (cost=1224826.07..1229280.61 rows=1781817 width=40) (actual time=29571.011..30008.415 rows=3561576 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812872.49 rows=11999789 width=8) (actual time=1.326..9290.612 rows=23987600 loops=1)
Q16,1.9,->  Hash Join  (cost=164148.55..1039829.65 rows=1781817 width=40) (actual time=3674.171..18431.852 rows=3561576 loops=1)
Q10,1.9,->  Hash Join  (cost=832337.38..6579989.65 rows=1670685 width=12) (actual time=17280.026..80946.172 rows=3237531 loops=1)
Q10,1.9,->  Hash Join  (cost=1039424.94..6839286.12 rows=1670685 width=176) (actual time=22055.997..88899.096 rows=3237531 loops=1)
Q10,1.9,->  Hash Join  (cost=1039423.38..6816312.64 rows=1670685 width=154) (actual time=22055.967..87705.065 rows=3237531 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5468692.55 rows=60239321 width=8) (actual time=0.015..58736.644 rows=113911724 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7307559.34 rows=1177084 width=38) (actual time=121.063..112189.366 rows=2182994 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5725877.86 rows=2409573 width=34) (actual time=120.974..82426.609 rows=4517902 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..551176.88 rows=55075288 width=0) (actual time=384.097..384.097 rows=32322560 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.039..0.065 rows=4 loops=19213)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.037..0.056 rows=4 loops=19213)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.030..0.032 rows=4 loops=19213)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..789.39 rows=2 width=8) (actual time=0.426..0.498 rows=3 loops=65300)
Q1,1.5,Sort  (cost=12630713.00..12630713.02 rows=6 width=20) (actual time=275912.875..275912.876 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12630712.82..12630712.93 rows=6 width=20) (actual time=275912.818..275912.819 rows=4 loops=1)
Q20,1.4,->  Nested Loop  (cost=2027.99..47509821.87 rows=120879 width=4) (actual time=46.046..33407.138 rows=177397 loops=1)
Q20,1.4,->  Hash  (cost=47509821.87..47509821.87 rows=120879 width=4) (actual time=33519.940..33519.940 rows=177397 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17938.20 rows=1791820 width=0) (actual time=12.879..12.879 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6881053.24..6897760.09 rows=1670685 width=176) (actual time=94688.566..95363.609 rows=1119055 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8574.52 rows=418345 width=0) (actual time=1400.009..1400.009 rows=572667 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8679.10..125496.66 rows=418345 width=24) (actual time=1432.447..2746.124 rows=572667 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..196567.00 rows=408395 width=4) (actual time=0.018..2794.174 rows=326500 loops=1)
Q9,1.2,->  Hash Join  (cost=201671.94..1060870.65 rows=1633551 width=16) (actual time=2928.862..15836.830 rows=1306000 loops=1)
Q9,1.2,->  Hash  (cost=196567.00..196567.00 rows=408395 width=4) (actual time=2926.496..2926.496 rows=326500 loops=1)
Q20,1.2,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2012.54 rows=53998 width=0) (actual time=30.653..30.653 rows=65300 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..277715.83 rows=27729183 width=0) (actual time=386.689..386.689 rows=32322560 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.013..7372.211 rows=24000000 loops=1)
Q9,1.0,GroupAggregate  (cost=4160537.24..4160543.12 rows=168 width=46) (actual time=497940.550..509269.635 rows=175 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.426..6199.235 rows=899395 loops=1)
Q8,1.0,->  Nested Loop  (cost=1240.24..5203070.12 rows=366993 width=20) (actual time=23.306..54348.029 rows=365807 loops=1)
Q8,1.0,->  Nested Loop  (cost=1239.68..4456163.66 rows=1205396 width=16) (actual time=23.220..19982.790 rows=1201109 loops=1)
Q8,1.0,->  Nested Loop  (cost=114195.29..5351359.99 rows=73399 width=16) (actual time=6508.121..61985.773 rows=72923 loops=1)
Q8,1.0,->  Hash Join  (cost=114196.86..5352737.78 rows=73399 width=38) (actual time=6508.170..62123.732 rows=72923 loops=1)
Q8,1.0,->  Hash Join  (cost=114194.87..5318134.96 rows=73399 width=16) (actual time=6508.074..61094.884 rows=72923 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=6481.018..6481.018 rows=899395 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1225.01 rows=40060 width=0) (actual time=14.971..14.971 rows=39959 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.65 rows=31 width=0) (actual time=0.022..0.022 rows=30 loops=39959)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1235.02..84428.82 rows=40060 width=4) (actual time=23.102..439.961 rows=39959 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.82 rows=31 width=20) (actual time=0.041..0.470 rows=30 loops=39959)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.285..1209.209 rows=179879 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1223153.98 rows=45495298 width=8) (actual time=0.011..8242.909 rows=45000000 loops=1)
Q7,1.0,->  Hash Join  (cost=576151.10..4885003.98 rows=4406023 width=42) (actual time=527.534..83356.384 rows=4364127 loops=1)
Q7,1.0,->  Hash Join  (cost=2227616.39..6577480.88 rows=183361 width=64) (actual time=25631.822..110464.107 rows=175113 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1605969.99 rows=3639624 width=30) (actual time=2100.138..23857.746 rows=3590425 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.037..1972.969 rows=360030 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.038..133.330 rows=23950 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2098.146..2098.146 rows=360030 loops=1)
Q7,1.0,->  Hash  (cost=1605969.99..1605969.99 rows=3639624 width=30) (actual time=25091.648..25091.648 rows=3590425 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=140.757..140.757 rows=23950 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=564945.70..4623206.02 rows=55075288 width=20) (actual time=386.641..69763.978 rows=54686323 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=278318.43..4134356.05 rows=2410383 width=8) (actual time=389.380..73696.863 rows=2383483 loops=1)
Q5,1.0,->  Seq Scan on orders  (cost=0.00..1450630.47 rows=6930383 width=8) (actual time=0.016..13469.583 rows=6825168 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=12.669..6645.040 rows=899362 loops=1)
Q5,1.0,->  Nested Loop  (cost=112966.68..7128503.26 rows=5544267 width=46) (actual time=6995.293..46157.975 rows=5449169 loops=1)
Q5,1.0,->  Hash Join  (cost=127005.68..7186341.98 rows=221772 width=34) (actual time=7193.318..48310.844 rows=218364 loops=1)
Q5,1.0,->  Hash Join  (cost=112966.11..1603446.29 rows=1386077 width=38) (actual time=6995.214..23640.535 rows=1362183 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=6991.699..6991.699 rows=899362 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=12.503..1297.076 rows=179872 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17514.67..807390.85 rows=1698212 width=20) (actual time=85.462..17340.318 rows=1687418 loops=1)
Q3,1.0,->  Hash Join  (cost=322553.99..1498910.88 rows=4463845 width=12) (actual time=1969.456..28089.903 rows=4410543 loops=1)
Q3,1.0,->  Hash  (cost=1498910.88..1498910.88 rows=4463845 width=12) (actual time=29992.633..29992.633 rows=4410543 loops=1)
Q3,1.0,->  Hash  (cost=137851.82..137851.82 rows=897945 width=4) (actual time=1878.829..1878.829 rows=899718 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20567.02 rows=897945 width=0) (actual time=200.139..200.139 rows=899718 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=173477.86..1221307.66 rows=22370304 width=16) (actual time=85.655..16270.215 rows=22070343 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=755315.33..5205012.99 rows=97405333 width=12) (actual time=387.024..70646.966 rows=96213426 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20791.51..137851.82 rows=897945 width=4) (actual time=232.797..1592.470 rows=899718 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1217106.68 rows=45270368 width=4) (actual time=0.014..11483.206 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1217106.68..1217106.68 rows=45270368 width=4) (actual time=22037.616..22037.616 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1968503.38..2290186.25 rows=180160 width=20) (actual time=23560.922..33654.532 rows=190863 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19545.48 rows=1140591 width=0) (actual time=285.729..285.729 rows=1144919 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19830.62..155607.14 rows=1140591 width=4) (actual time=317.326..993.457 rows=1144919 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.748..116.826 rows=11902 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=120.869..120.869 rows=11902 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.735..114.851 rows=11902 loops=1)
Q2,1.0,->  Sort  (cost=1431183.48..1443166.50 rows=4793205 width=168) (actual time=22609.124..24184.153 rows=4800070 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.021..5958.518 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.719..432.218 rows=60005 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=24373 width=30) (actual time=0.057..4121.262 rows=24043 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899316.06 rows=4793205 width=168) (actual time=466.358..15209.975 rows=4800400 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=466.098..466.098 rows=60005 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.664..83.896 rows=12001 loops=5)
Q20,1.0,Sort  (cost=47518822.65..47518834.73 rows=4835 width=51) (actual time=33610.019..33610.319 rows=5302 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.761..78.328 rows=11957 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=47511437.86..47518526.76 rows=4835 width=51) (actual time=33521.227..33603.855 rows=5302 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.742..76.419 rows=11957 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2027.55..99528.01 rows=60058 width=4) (actual time=44.989..805.875 rows=65300 loops=1)
Q19,1.0,->  Nested Loop  (cost=38494.37..1879112.99 rows=3505 width=8) (actual time=106.330..7660.779 rows=3457 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11970.80 rows=1195080 width=0) (actual time=12.862..12.862 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..857.07 rows=24685 width=0) (actual time=10.787..10.787 rows=24419 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..855.07 rows=24486 width=0) (actual time=10.397..10.397 rows=23972 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..836.47 rows=24225 width=0) (actual time=10.582..10.582 rows=23814 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.74 rows=31 width=0) (actual time=0.024..0.024 rows=30 loops=14446)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38489.62..80400.72 rows=14636 width=30) (actual time=105.841..795.528 rows=14446 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1211059.38 rows=45045438 width=16) (actual time=0.006..8083.689 rows=45000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5001920.65 rows=180178465 width=8) (actual time=0.005..31266.175 rows=179999426 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5001920.65 rows=180178465 width=8) (actual time=0.005..39275.003 rows=179999426 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.023..0.044 rows=30 loops=6038)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.023..0.044 rows=30 loops=6038)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..208.31 rows=5975 width=0) (actual time=2.656..2.656 rows=6038 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=209.80..19795.30 rows=5975 width=4) (actual time=3.742..91.046 rows=6038 loops=1)
Q16,1.0,Sort  (cost=1249432.64..1249502.24 rows=27842 width=40) (actual time=31829.584..31832.750 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=153003.24..153003.24 rows=890924 width=40) (actual time=3669.433..3669.433 rows=890857 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1224826.07..1247377.20 rows=27842 width=40) (actual time=29571.122..31774.447 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7441.24..153003.24 rows=890924 width=40) (actual time=100.219..3300.491 rows=890857 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5961829.38 rows=6863877 width=12) (actual time=0.010..54148.570 rows=6727672 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..5961829.38 rows=6863877 width=12) (actual time=0.018..53570.137 rows=6727672 loops=1)
Q14,1.0,->  Hash Join  (cost=280986.24..3477753.51 rows=2340999 width=29) (actual time=5091.193..76155.565 rows=2317302 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=24419.24..3174366.53 rows=2340999 width=12) (actual time=385.738..68946.129 rows=2317302 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1336892.23 rows=45041897 width=8) (actual time=0.017..24293.297 rows=44517169 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2332211.42 rows=45041897 width=8) (actual time=2750.267..61154.738 rows=46017245 loops=1)
Q12,1.0,->  Sort  (cost=7413260.27..7415453.05 rows=877114 width=15) (actual time=72290.570..72429.347 rows=934770 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7326678.57 rows=877114 width=15) (actual time=0.136..71670.447 rows=934770 loops=1)
Q12,1.0,->  Merge Join  (cost=7413273.34..9495217.25 rows=877114 width=27) (actual time=72290.599..93812.659 rows=934770 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1955062.03 rows=45495298 width=20) (actual time=0.008..16328.154 rows=44999940 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.016..5851.584 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=16) (actual time=0.042..5663.774 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.710..113.400 rows=12004 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.705..77.452 rows=12004 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=8) (actual time=80.719..10634.607 rows=960320 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=12) (actual time=117.128..10269.213 rows=960320 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=80.601..80.601 rows=12004 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=117.009..117.009 rows=12004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.682..75.430 rows=12004 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.685..111.353 rows=12004 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5479588.30 rows=178778113 width=20) (actual time=0.018..59077.906 rows=177864517 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5506879.65 rows=44813154 width=12) (actual time=0.027..52629.009 rows=44419494 loops=1)
Q10,1.0,->  Hash  (cost=811135.93..811135.93 rows=1696116 width=8) (actual time=17271.078..17271.078 rows=1684898 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17493.19..811135.93 rows=1696116 width=8) (actual time=85.860..16556.922 rows=1684898 loops=1)
