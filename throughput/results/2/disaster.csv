Q21,2128463.0,->  Nested Loop Semi Join  (cost=7193.26..10068676.63 rows=1 width=34) (actual time=117.405..128461.579 rows=2128463 loops=1)
Q3,960394.3,->  Sort  (cost=8066548.96..8090558.81 rows=9603943 width=20) (actual time=108285.838..108285.841 rows=10 loops=1)
Q18,909899.4,->  GroupAggregate  (cost=36382926.84..38885150.36 rows=90989946 width=39) (actual time=252090.750..252091.079 rows=100 loops=1)
Q18,129800.2,->  Sort  (cost=36382926.84..36610401.71 rows=90989946 width=39) (actual time=252090.740..252090.785 rows=701 loops=1)
Q21,119862.0,->  Nested Loop Anti Join  (cost=7193.83..10068679.72 rows=1 width=26) (actual time=117.942..137062.466 rows=119862 loops=1)
Q10,83240.9,->  Sort  (cost=6889921.83..6894083.88 rows=1664819 width=176) (actual time=102870.186..102870.189 rows=20 loops=1)
Q18,81532.7,->  Hash Join  (cost=6320934.00..8156213.09 rows=22747649 width=39) (actual time=145114.485..163259.922 rows=279 loops=1)
Q18,81532.7,->  Hash Join  (cost=6113848.00..7551043.23 rows=22747649 width=20) (actual time=141743.789..159888.402 rows=279 loops=1)
Q18,81532.7,->  Hash  (cost=8156213.09..8156213.09 rows=22747649 width=39) (actual time=163261.247..163261.247 rows=279 loops=1)
Q9,72711.6,->  Sort  (cost=3560329.84..3560330.18 rows=135 width=46) (actual time=524290.459..530163.763 rows=9816069 loops=1)
Q9,72711.6,->  Nested Loop  (cost=200697.54..3560320.97 rows=135 width=24) (actual time=2806.943..434959.287 rows=9816069 loops=1)
Q9,72711.6,->  Nested Loop  (cost=200696.98..3560238.00 rows=135 width=24) (actual time=2806.884..212796.324 rows=9816069 loops=1)
Q9,72711.6,->  Nested Loop  (cost=200696.56..3560176.89 rows=135 width=28) (actual time=2806.871..172255.610 rows=9816069 loops=1)
Q9,72711.6,->  Hash Join  (cost=200699.11..3560325.06 rows=135 width=46) (actual time=2807.004..447098.978 rows=9816069 loops=1)
Q18,46589.8,->  Hash Join  (cost=8618275.70..21866411.71 rows=90989946 width=39) (actual time=164564.186..252088.196 rows=1953 loops=1)
Q18,15567.7,->  Hash  (cost=6059555.63..6059555.63 rows=4343389 width=4) (actual time=141667.984..141667.984 rows=279 loops=1)
Q18,15567.7,->  HashAggregate  (cost=5961829.38..6016121.74 rows=4343389 width=8) (actual time=123334.030..141667.397 rows=279 loops=1)
Q2,14053.0,->  Merge Join  (cost=1431184.22..3091012.48 rows=1 width=190) (actual time=27028.102..34337.352 rows=14053 loops=1)
Q21,12068.0,->  HashAggregate  (cost=10068679.73..10068679.74 rows=1 width=26) (actual time=137264.716..137269.020 rows=12068 loops=1)
Q15,11302.0,->  Subquery Scan on revenue2  (cost=5266554.01..5266808.30 rows=11302 width=12) (actual time=153461.335..153479.900 rows=1 loops=1)
Q15,11302.0,->  Sort  (cost=5267569.17..5267597.43 rows=11302 width=12) (actual time=153479.923..153479.923 rows=1 loops=1)
Q15,11302.0,Merge Join  (cost=10482919.11..10498183.58 rows=11302 width=79) (actual time=153550.463..153550.466 rows=1 loops=1)
Q15,11302.0,->  HashAggregate  (cost=5266554.01..5266695.28 rows=11302 width=12) (actual time=153461.333..153479.897 rows=1 loops=1)
Q7,764.2,Sort  (cost=6580454.12..6580461.77 rows=3057 width=64) (actual time=118738.586..118738.586 rows=4 loops=1)
Q7,764.2,->  HashAggregate  (cost=6580231.30..6580277.15 rows=3057 width=64) (actual time=118738.517..118738.527 rows=4 loops=1)
Q8,366.5,Sort  (cost=5212985.96..5212987.80 rows=733 width=38) (actual time=50437.624..50437.624 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5212938.25..5212951.08 rows=733 width=38) (actual time=50437.579..50437.581 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=10068679.75..10068679.75 rows=1 width=26) (actual time=137271.826..137271.834 rows=100 loops=1)
Q21,100.0,Limit  (cost=10068679.75..10068679.75 rows=1 width=26) (actual time=137271.828..137271.846 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3091012.49..3091012.49 rows=1 width=190) (actual time=34350.906..34350.922 rows=100 loops=1)
Q2,100.0,Limit  (cost=3091012.49..3091012.49 rows=1 width=190) (actual time=34350.908..34350.933 rows=100 loops=1)
Q21,42.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.76 rows=42 width=8) (actual time=0.006..0.006 rows=1 loops=2209293)
Q11,35.8,Sort  (cost=1850476.53..1852873.13 rows=958641 width=12) (actual time=21657.250..21660.489 rows=26714 loops=1)
Q11,35.8,->  HashAggregate  (cost=876417.95..888400.97 rows=958641 width=12) (actual time=21327.025..21641.688 rows=26714 loops=1)
Q3,28.2,->  HashAggregate  (cost=7762971.77..7859011.20 rows=9603943 width=20) (actual time=108070.456..108222.427 rows=340330 loops=1)
Q15,26.5,->  HashAggregate  (cost=5215095.21..5215208.23 rows=11302 width=12) (actual time=75028.894..75126.459 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.69 rows=14 width=4) (actual time=0.013..0.013 rows=1 loops=1718029)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.76 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2128463)
Q14,13.9,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23382.51 rows=2295851 width=0) (actual time=377.281..377.281 rows=32034560 loops=1)
Q3,10.6,->  Hash Join  (cost=2311787.63..7618912.62 rows=9603943 width=20) (actual time=29045.378..107235.708 rows=899923 loops=1)
Q5,10.5,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.58 rows=42 width=16) (actual time=0.014..0.015 rows=4 loops=1367684)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7215.51 rows=959400 width=0) (actual time=100.039..100.039 rows=9728000 loops=1)
Q4,9.4,->  Nested Loop Semi Join  (cost=17957.36..2767512.67 rows=166244 width=16) (actual time=86.140..40751.709 rows=1575176 loops=1)
Q9,8.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.88 rows=1 width=24) (actual time=0.020..0.117 rows=8 loops=1307316)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.196..11.196 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.199..11.199 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.657..0.657 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.662..0.662 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.669..0.669 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.692..0.692 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.662..0.662 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.043..2.928 rows=155 loops=1)
Q5,5.0,Sort  (cost=6723736.44..6723736.51 rows=25 width=34) (actual time=55238.168..55238.168 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=6723735.61..6723735.86 rows=25 width=34) (actual time=55238.124..55238.125 rows=5 loops=1)
Q4,5.0,Sort  (cost=2768343.91..2768343.92 rows=1 width=16) (actual time=41661.408..41661.409 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2768343.89..2768343.90 rows=1 width=16) (actual time=41661.358..41661.360 rows=5 loops=1)
Q10,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17009.77 rows=1690177 width=0) (actual time=94.847..94.847 rows=7622400 loops=1)
Q4,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17521.46 rows=1741346 width=0) (actual time=85.571..85.571 rows=7682560 loops=1)
Q13,4.3,Sort  (cost=2670928.88..2670929.38 rows=200 width=8) (actual time=98429.200..98429.203 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=2670919.23..2670921.23 rows=200 width=8) (actual time=98429.131..98429.140 rows=46 loops=1)
Q17,3.7,->  Nested Loop  (cost=219.62..340922.90 rows=59909 width=4) (actual time=4.339..697.956 rows=16082 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.77..53.61 rows=10 width=12) (actual time=0.021..0.051 rows=3 loops=6021)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..742531.96 rows=98947728 width=0) (actual time=416.970..416.970 rows=32322560 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..164945.35 rows=21978313 width=0) (actual time=84.668..84.668 rows=7682560 loops=1)
Q15,2.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..639969.06 rows=85272675 width=0) (actual time=385.863..385.863 rows=32257280 loops=1)
Q15,2.6,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..639969.06 rows=85272675 width=0) (actual time=384.330..384.330 rows=32257280 loops=1)
Q22,2.3,Sort  (cost=2461232.08..2461232.09 rows=3 width=20) (actual time=32330.334..32330.334 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2302455.13..2302455.18 rows=3 width=20) (actual time=32330.292..32330.295 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.046..0.064 rows=2 loops=19090)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..6008.80 rows=598880 width=0) (actual time=13.374..13.374 rows=1216000 loops=1)
Q16,2.0,->  Sort  (cost=1224494.81..1228943.10 rows=1779319 width=40) (actual time=31016.796..31603.096 rows=3561000 loops=1)
Q16,2.0,->  Hash Join  (cost=164119.63..1039775.75 rows=1779319 width=40) (actual time=3819.431..18622.476 rows=3561000 loops=1)
Q12,2.0,Sort  (cost=9511739.94..9511739.94 rows=1 width=27) (actual time=94874.833..94874.833 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9511739.92..9511739.93 rows=1 width=27) (actual time=94874.799..94874.800 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=826036.18..6528239.78 rows=1664819 width=12) (actual time=20669.203..87370.111 rows=3336293 loops=1)
Q10,2.0,->  Hash Join  (cost=1033123.74..6787352.93 rows=1664819 width=176) (actual time=25560.098..95821.938 rows=3336293 loops=1)
Q10,2.0,->  Hash Join  (cost=1033122.18..6764460.11 rows=1664819 width=154) (actual time=25560.065..94596.636 rows=3336293 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812872.49 rows=11999789 width=8) (actual time=3.056..9500.579 rows=23987600 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5506879.65 rows=60659964 width=8) (actual time=0.014..59291.602 rows=113799629 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7358673.34 rows=1185304 width=38) (actual time=117.328..113521.873 rows=2209293 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5765810.63 rows=2426399 width=34) (actual time=117.293..83206.167 rows=4577424 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..551176.88 rows=55075288 width=0) (actual time=383.194..383.194 rows=32322560 loops=1)
Q15,1.7,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.043..53.260 rows=173945 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.034..0.060 rows=4 loops=19090)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.032..0.051 rows=4 loops=19090)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.024..0.026 rows=4 loops=19090)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..789.10 rows=2 width=8) (actual time=0.436..0.506 rows=3 loops=65525)
Q1,1.5,Sort  (cost=12643837.59..12643837.61 rows=6 width=20) (actual time=271968.276..271968.276 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12643837.41..12643837.52 rows=6 width=20) (actual time=271968.224..271968.227 rows=4 loops=1)
Q5,1.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..81452.00 rows=10845867 width=0) (actual time=84.847..84.847 rows=7674880 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17938.20 rows=1791820 width=0) (actual time=13.255..13.255 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6828973.41..6845621.60 rows=1664819 width=176) (actual time=101780.322..102462.391 rows=1122132 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8628.07 rows=420900 width=0) (actual time=2172.585..2172.585 rows=573499 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8733.29..125617.92 rows=420900 width=24) (actual time=2207.758..2682.377 rows=573499 loops=1)
Q20,1.3,->  Nested Loop  (cost=2253.49..52236850.09 rows=132967 width=4) (actual time=47.341..33856.155 rows=178340 loops=1)
Q20,1.3,->  Hash  (cost=52236850.09..52236850.09 rows=132967 width=4) (actual time=33971.826..33971.826 rows=178340 loops=1)
Q9,1.2,GroupAggregate  (cost=3560329.84..3560334.57 rows=135 width=46) (actual time=524328.960..536468.239 rows=175 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..275387.48 rows=27496348 width=0) (actual time=378.548..378.548 rows=32002560 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.004..7230.091 rows=24000000 loops=1)
Q9,1.0,->  Seq Scan on part  (cost=0.00..196567.00 rows=330319 width=4) (actual time=0.009..2673.133 rows=326829 loops=1)
Q9,1.0,->  Hash Join  (cost=200695.99..1056771.72 rows=1321253 width=16) (actual time=2806.840..15507.558 rows=1307316 loops=1)
Q9,1.0,->  Hash  (cost=196567.00..196567.00 rows=330319 width=4) (actual time=2804.505..2804.505 rows=326829 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.422..6088.154 rows=899395 loops=1)
Q8,1.0,->  Nested Loop  (cost=1198.55..5076934.41 rows=358116 width=20) (actual time=22.491..43079.713 rows=365309 loops=1)
Q8,1.0,->  Nested Loop  (cost=1197.98..4348071.78 rows=1176240 width=16) (actual time=22.311..18785.978 rows=1206084 loops=1)
Q8,1.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..109.56 rows=31 width=20) (actual time=0.030..0.444 rows=30 loops=40168)
Q8,1.0,->  Hash Join  (cost=14487.55..5095147.51 rows=358116 width=20) (actual time=215.285..43565.253 rows=365309 loops=1)
Q8,1.0,->  Hash Join  (cost=127443.74..5211505.79 rows=71623 width=38) (actual time=6619.205..50311.830 rows=72691 loops=1)
Q8,1.0,->  Hash Join  (cost=127442.18..5210161.30 rows=71623 width=16) (actual time=6619.154..50192.431 rows=72691 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=6399.253..6399.253 rows=899395 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1187.71 rows=38820 width=0) (actual time=14.299..14.299 rows=40168 loops=1)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1197.41..82886.28 rows=38820 width=4) (actual time=22.224..482.030 rows=40168 loops=1)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.273..1187.786 rows=179879 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1223153.98 rows=45495298 width=8) (actual time=0.016..9159.522 rows=45000000 loops=1)
Q7,1.0,->  Hash Join  (cost=576151.10..4885003.98 rows=4406023 width=42) (actual time=526.596..88570.019 rows=4396723 loops=1)
Q7,1.0,->  Hash Join  (cost=2227616.39..6577480.88 rows=183361 width=64) (actual time=27514.869..118467.429 rows=175858 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1605969.99 rows=3639624 width=30) (actual time=1958.977..25461.134 rows=3612952 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.039..1830.068 rows=361003 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.037..133.154 rows=24132 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=1956.509..1956.509 rows=361003 loops=1)
Q7,1.0,->  Hash  (cost=1605969.99..1605969.99 rows=3639624 width=30) (actual time=26968.508..26968.508 rows=3612952 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=140.721..140.721 rows=24132 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=564945.70..4623206.02 rows=55075288 width=20) (actual time=385.732..72471.262 rows=54686323 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=275964.57..4094768.40 rows=2308383 width=8) (actual time=381.105..79745.984 rows=2287286 loops=1)
Q5,1.0,->  Nested Loop  (cost=196135.30..6664103.92 rows=5493092 width=46) (actual time=7058.187..52456.779 rows=5470057 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.415..6611.063 rows=899950 loops=1)
Q5,1.0,->  Hash Join  (cost=210174.30..6721538.36 rows=219725 width=34) (actual time=7260.406..54967.288 rows=219852 loops=1)
Q5,1.0,->  Hash Join  (cost=196134.73..1165745.78 rows=1373289 width=38) (actual time=7058.104..29151.495 rows=1367684 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=6967.828..6967.828 rows=899950 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=83168.62..1013297.62 rows=6866443 width=8) (actual time=85.392..18048.815 rows=6836053 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.276..1290.377 rows=179990 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17956.79..812277.98 rows=1741346 width=20) (actual time=86.116..17194.690 rows=1718029 loops=1)
Q3,1.0,->  Hash Join  (cost=319814.45..1489321.13 rows=4415809 width=12) (actual time=2058.648..26810.233 rows=4334751 loops=1)
Q3,1.0,->  Hash  (cost=1489321.13..1489321.13 rows=4415809 width=12) (actual time=28586.198..28586.198 rows=4334751 loops=1)
Q3,1.0,->  Hash  (cost=138072.96..138072.96 rows=904125 width=4) (actual time=1968.539..1968.539 rows=900602 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20709.37 rows=904125 width=0) (actual time=201.333..201.333 rows=900602 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=170439.93..1213369.84 rows=21978313 width=16) (actual time=85.204..16530.059 rows=21677168 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=767268.89..5236246.49 rows=98947728 width=12) (actual time=419.502..61962.142 rows=97787186 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20935.40..138072.96 rows=904125 width=4) (actual time=232.720..1685.949 rows=900602 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1223153.98 rows=45495298 width=4) (actual time=0.012..10716.427 rows=45045000 loops=1)
Q22,1.0,->  Hash  (cost=1223153.98..1223153.98 rows=45495298 width=4) (actual time=21512.485..21512.485 rows=45045000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1978295.50..2301095.68 rows=181260 width=20) (actual time=23811.565..32262.845 rows=190773 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19661.71 rows=1147557 width=0) (actual time=294.413..294.413 rows=1146772 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19948.60..155907.97 rows=1147557 width=4) (actual time=327.291..1746.858 rows=1146772 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.696..113.177 rows=12068 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=117.183..117.183 rows=12068 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.681..111.147 rows=12068 loops=1)
Q2,1.0,->  Sort  (cost=1431183.48..1443166.50 rows=4793205 width=168) (actual time=27027.564..28577.699 rows=4767212 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.013..5826.160 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.731..438.236 rows=59592 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=23696 width=30) (actual time=0.175..3676.349 rows=24012 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899316.06 rows=4793205 width=168) (actual time=472.590..17123.388 rows=4767360 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=472.211..472.211 rows=59592 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.673..85.113 rows=11918 loops=5)
Q20,1.0,Sort  (cost=52246053.93..52246067.23 rows=5319 width=51) (actual time=34067.855..34068.169 rows=5357 loops=1)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.707..83.798 rows=11959 loops=1)
Q20,1.0,->  Hash Semi Join  (cost=52238617.18..52245724.76 rows=5319 width=51) (actual time=33973.832..34062.246 rows=5357 loops=1)
Q20,1.0,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2236.54 rows=59998 width=0) (actual time=31.992..31.992 rows=65525 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.688..81.867 rows=11959 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2253.05..104662.28 rows=66064 width=4) (actual time=46.539..634.307 rows=65525 loops=1)
Q19,1.0,->  Nested Loop  (cost=38419.80..1833640.66 rows=3391 width=8) (actual time=110.629..7060.557 rows=3396 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11970.80 rows=1195080 width=0) (actual time=12.873..12.873 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..834.59 rows=24035 width=0) (actual time=10.585..10.585 rows=23969 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..832.23 rows=23801 width=0) (actual time=10.661..10.661 rows=23807 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..811.99 rows=23378 width=0) (actual time=10.783..10.783 rows=23890 loops=1)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38419.23..79436.11 rows=14242 width=30) (actual time=103.757..758.090 rows=14446 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1223153.98 rows=45495298 width=16) (actual time=0.007..8439.924 rows=45000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5051929.92 rows=181979892 width=8) (actual time=0.005..29585.054 rows=180000497 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5051929.92 rows=181979892 width=8) (actual time=0.047..44933.457 rows=180000497 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.024..0.040 rows=30 loops=6021)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.024..0.040 rows=30 loops=6021)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..208.35 rows=5979 width=0) (actual time=2.768..2.768 rows=6021 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=209.84..19807.46 rows=5979 width=4) (actual time=3.860..95.519 rows=6021 loops=1)
Q16,1.0,Sort  (cost=1249066.60..1249136.10 rows=27803 width=40) (actual time=33472.832..33476.260 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=152989.93..152989.93 rows=889675 width=40) (actual time=3809.286..3809.286 rows=890704 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1224494.81..1247014.32 rows=27803 width=40) (actual time=31016.922..33417.372 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7437.93..152989.93 rows=889675 width=40) (actual time=100.135..3384.947 rows=890704 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem lineitem_1  (cost=641684.36..5146483.48 rows=6861173 width=12) (actual time=386.908..68763.085 rows=6742175 loops=1)
Q15,1.0,->  Bitmap Heap Scan on lineitem  (cost=641684.36..5146483.48 rows=6861173 width=12) (actual time=388.508..71408.354 rows=6742175 loops=1)
Q14,1.0,->  Hash Join  (cost=280523.48..3438441.66 rows=2295851 width=29) (actual time=5314.248..75314.100 rows=2247132 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=23956.48..3135957.64 rows=2295851 width=12) (actual time=379.881..67776.076 rows=2247132 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1336892.23 rows=45086267 width=8) (actual time=0.020..22408.312 rows=44514103 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2332987.90 rows=45086267 width=8) (actual time=2652.907..58031.268 rows=46014182 loops=1)
Q12,1.0,->  Sort  (cost=7414158.07..7416372.04 rows=885587 width=15) (actual time=73739.243..73861.346 rows=936086 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7326678.57 rows=885587 width=15) (actual time=0.027..73120.640 rows=936086 loops=1)
Q12,1.0,->  Merge Join  (cost=7414171.14..9496242.14 rows=885587 width=27) (actual time=73739.341..94034.970 rows=936086 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1955062.03 rows=45495298 width=20) (actual time=0.007..15186.002 rows=45044991 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.017..5642.559 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=16) (actual time=0.016..5534.262 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.740..114.827 rows=12108 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.706..78.443 rows=12108 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=8) (actual time=81.656..10401.232 rows=968640 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=12) (actual time=118.538..9865.498 rows=968640 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=81.539..81.539 rows=12108 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=118.442..118.442 rows=12108 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.680..76.538 rows=12108 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.714..112.711 rows=12108 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5506879.65 rows=178423944 width=20) (actual time=0.017..58010.494 rows=176430098 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5463264.28 rows=44458226 width=12) (actual time=0.026..54244.162 rows=44462429 loops=1)
Q10,1.0,->  Hash  (cost=804908.97..804908.97 rows=1690177 width=8) (actual time=20655.675..20655.675 rows=1667286 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17432.31..804908.97 rows=1690177 width=8) (actual time=95.389..19783.252 rows=1667286 loops=1)
