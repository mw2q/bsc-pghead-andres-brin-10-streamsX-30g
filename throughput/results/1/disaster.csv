Q21,2113175.0,->  Nested Loop Semi Join  (cost=7193.26..9927485.17 rows=1 width=34) (actual time=173.935..122863.479 rows=2113175 loops=1)
Q3,945229.4,->  Sort  (cost=7970288.95..7993919.69 rows=9452294 width=20) (actual time=118821.817..118821.818 rows=10 loops=1)
Q18,902743.5,->  GroupAggregate  (cost=36094708.78..38577253.62 rows=90274358 width=39) (actual time=253166.330..253166.662 rows=100 loops=1)
Q18,128779.3,->  Sort  (cost=36094708.78..36320394.67 rows=90274358 width=39) (actual time=253166.320..253166.351 rows=701 loops=1)
Q21,118709.0,->  Nested Loop Anti Join  (cost=7193.83..9927488.21 rows=1 width=26) (actual time=175.107..131586.923 rows=118709 loops=1)
Q18,112838.4,->  Hash Join  (cost=6274047.35..8095151.70 rows=22567699 width=39) (actual time=149660.471..168373.142 rows=200 loops=1)
Q18,112838.4,->  Hash Join  (cost=6066961.35..7493130.97 rows=22567699 width=20) (actual time=147154.376..165866.316 rows=200 loops=1)
Q18,112838.4,->  Hash  (cost=8095151.70..8095151.70 rows=22567699 width=39) (actual time=168373.968..168373.968 rows=200 loops=1)
Q9,89623.9,->  Sort  (cost=3060097.01..3060097.28 rows=109 width=46) (actual time=502740.266..508259.652 rows=9769008 loops=1)
Q9,89623.9,->  Nested Loop  (cost=199871.74..3060089.71 rows=109 width=24) (actual time=2728.473..415616.952 rows=9769008 loops=1)
Q9,89623.9,->  Nested Loop  (cost=199871.18..3060022.72 rows=109 width=24) (actual time=2728.424..212888.726 rows=9769008 loops=1)
Q9,89623.9,->  Nested Loop  (cost=199870.76..3059973.38 rows=109 width=28) (actual time=2728.404..171331.315 rows=9769008 loops=1)
Q9,89623.9,->  Hash Join  (cost=199873.31..3060093.32 rows=109 width=46) (actual time=2728.527..427477.972 rows=9769008 loops=1)
Q10,84648.0,->  Sort  (cost=6945361.44..6949593.84 rows=1692961 width=176) (actual time=98805.528..98805.532 rows=20 loops=1)
Q18,64481.6,->  Hash Join  (cost=8553558.94..21697498.05 rows=90274358 width=39) (actual time=169552.187..253164.455 rows=1400 loops=1)
Q18,21716.9,->  Hash  (cost=6012668.99..6012668.99 rows=4343389 width=4) (actual time=147000.492..147000.492 rows=200 loops=1)
Q18,21716.9,->  HashAggregate  (cost=5914942.74..5969235.10 rows=4343389 width=8) (actual time=123844.691..146999.912 rows=200 loops=1)
Q2,14176.0,->  Merge Join  (cost=1431184.22..3117680.26 rows=1 width=190) (actual time=22235.483..29477.106 rows=14176 loops=1)
Q21,11968.0,->  HashAggregate  (cost=9927488.22..9927488.23 rows=1 width=26) (actual time=131771.493..131775.029 rows=11968 loops=1)
Q15,11275.0,->  Subquery Scan on revenue1  (cost=6069762.76..6070016.45 rows=11275 width=12) (actual time=125744.707..125749.230 rows=1 loops=1)
Q15,11275.0,->  Sort  (cost=6070775.30..6070803.49 rows=11275 width=12) (actual time=125749.248..125749.248 rows=1 loops=1)
Q15,11275.0,Merge Join  (cost=12089458.29..12104722.36 rows=11275 width=79) (actual time=125869.583..125869.586 rows=1 loops=1)
Q15,11275.0,->  HashAggregate  (cost=6069762.76..6069903.70 rows=11275 width=12) (actual time=125744.706..125749.227 rows=1 loops=1)
Q7,764.2,Sort  (cost=6548789.77..6548797.41 rows=3057 width=64) (actual time=116597.991..116597.991 rows=4 loops=1)
Q7,764.2,->  HashAggregate  (cost=6548566.94..6548612.80 rows=3057 width=64) (actual time=116597.927..116597.930 rows=4 loops=1)
Q8,366.5,Sort  (cost=5399571.05..5399572.88 rows=733 width=38) (actual time=52232.770..52232.770 rows=2 loops=1)
Q8,366.5,->  HashAggregate  (cost=5399523.34..5399536.17 rows=733 width=38) (actual time=52232.725..52232.726 rows=2 loops=1)
Q21,100.0,->  Sort  (cost=9927488.24..9927488.24 rows=1 width=26) (actual time=131777.733..131777.740 rows=100 loops=1)
Q21,100.0,Limit  (cost=9927488.24..9927488.24 rows=1 width=26) (actual time=131777.735..131777.753 rows=100 loops=1)
Q2,100.0,->  Sort  (cost=3117680.27..3117680.27 rows=1 width=190) (actual time=29491.304..29491.317 rows=100 loops=1)
Q2,100.0,Limit  (cost=3117680.27..3117680.27 rows=1 width=190) (actual time=29491.306..29491.331 rows=100 loops=1)
Q21,41.0,->  Index Scan using pk_lineitem on lineitem l2  (cost=0.57..1.74 rows=41 width=8) (actual time=0.006..0.006 rows=1 loops=2193364)
Q11,32.9,Sort  (cost=1850476.53..1852873.13 rows=958641 width=12) (actual time=21664.898..21668.439 rows=29087 loops=1)
Q11,32.9,->  HashAggregate  (cost=876417.95..888400.97 rows=958641 width=12) (actual time=21308.262..21647.859 rows=29087 loops=1)
Q3,27.8,->  HashAggregate  (cost=7671505.34..7766028.28 rows=9452294 width=20) (actual time=118592.341..118758.831 rows=339841 loops=1)
Q15,26.6,->  HashAggregate  (cost=6018428.87..6018541.62 rows=11275 width=12) (actual time=62088.591..62189.050 rows=300000 loops=1)
Q4,14.0,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..7.82 rows=14 width=4) (actual time=0.013..0.013 rows=1 loops=1700925)
Q21,14.0,->  Index Scan using pk_lineitem on lineitem l3  (cost=0.57..1.74 rows=14 width=8) (actual time=0.004..0.004 rows=1 loops=2113175)
Q14,13.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..23920.99 rows=2349699 width=0) (actual time=381.418..381.418 rows=32322560 loops=1)
Q5,10.5,->  Index Scan using pk_lineitem on lineitem  (cost=0.57..3.56 rows=42 width=16) (actual time=0.013..0.014 rows=4 loops=1368873)
Q3,10.5,->  Hash Join  (cost=2290848.97..7529720.93 rows=9452294 width=20) (actual time=33959.087..117727.636 rows=899158 loops=1)
Q16,10.1,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..7209.81 rows=958640 width=0) (actual time=101.571..101.571 rows=9728000 loops=1)
Q4,9.6,->  Nested Loop Semi Join  (cost=17493.76..2732288.69 rows=161926 width=16) (actual time=86.011..38946.679 rows=1559570 loops=1)
Q9,7.0,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=0.57..1.89 rows=1 width=24) (actual time=0.020..0.117 rows=7 loops=1302564)
Q8,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.189..11.189 rows=1058560 loops=5)
Q5,5.8,->  Bitmap Index Scan on customer_c_nationkey_c_custkey_brin_idx  (cost=0.00..1850.00 rows=180000 width=0) (actual time=11.370..11.370 rows=1058560 loops=5)
Q2,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..390.00 rows=12000 width=0) (actual time=0.646..0.646 rows=66560 loops=5)
Q21,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.665..0.665 rows=66560 loops=1)
Q20,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.719..0.719 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.671..0.671 rows=66560 loops=1)
Q11,5.5,->  Bitmap Index Scan on supplier_s_nationkey_s_suppkey_brin_idx  (cost=0.00..102.00 rows=12000 width=0) (actual time=0.659..0.659 rows=66560 loops=1)
Q16,5.1,->  Index Scan using supplier_s_suppkey_idx_like on supplier  (cost=0.14..8.69 rows=30 width=4) (actual time=0.035..1.220 rows=155 loops=1)
Q5,5.0,Sort  (cost=6872850.92..6872850.98 rows=25 width=34) (actual time=50500.511..50500.511 rows=5 loops=1)
Q5,5.0,->  HashAggregate  (cost=6872850.09..6872850.34 rows=25 width=34) (actual time=50500.470..50500.471 rows=5 loops=1)
Q4,5.0,Sort  (cost=2733098.34..2733098.34 rows=1 width=16) (actual time=39884.873..39884.873 rows=5 loops=1)
Q4,5.0,->  HashAggregate  (cost=2733098.32..2733098.33 rows=1 width=16) (actual time=39884.827..39884.828 rows=5 loops=1)
Q4,4.5,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17069.16 rows=1696116 width=0) (actual time=85.470..85.470 rows=7682560 loops=1)
Q10,4.4,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..17295.31 rows=1718731 width=0) (actual time=85.015..85.015 rows=7682560 loops=1)
Q13,4.3,Sort  (cost=2668602.62..2668603.12 rows=200 width=8) (actual time=96380.465..96380.469 rows=46 loops=1)
Q13,4.3,->  HashAggregate  (cost=2668592.97..2668594.97 rows=200 width=8) (actual time=96380.400..96380.413 rows=46 loops=1)
Q17,3.6,->  Nested Loop  (cost=219.87..342336.34 rows=60520 width=4) (actual time=4.477..746.797 rows=16383 loops=1)
Q17,3.3,->  Index Scan using lineitem_l_partkey_l_quantity_idx on lineitem  (cost=9.77..53.61 rows=10 width=12) (actual time=0.020..0.051 rows=3 loops=6069)
Q3,3.0,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..727827.63 rows=96987151 width=0) (actual time=385.293..385.293 rows=32047360 loops=1)
Q3,2.8,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..165551.55 rows=22059140 width=0) (actual time=84.120..84.120 rows=7614720 loops=1)
Q5,2.3,->  Bitmap Index Scan on orders_o_orderdate_o_orderkey_brin_idx  (cost=0.00..132848.62 rows=17698750 width=0) (actual time=84.434..84.434 rows=7644160 loops=1)
Q22,2.3,Sort  (cost=2461186.20..2461186.20 rows=3 width=20) (actual time=32244.128..32244.129 rows=7 loops=1)
Q22,2.3,->  HashAggregate  (cost=2302430.65..2302430.70 rows=3 width=20) (actual time=32244.086..32244.088 rows=7 loops=1)
Q2,2.0,->  Nested Loop  (cost=1.00..70.15 rows=1 width=4) (actual time=0.046..0.064 rows=2 loops=19294)
Q19,2.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..6008.80 rows=598880 width=0) (actual time=12.936..12.936 rows=1216000 loops=1)
Q16,2.0,->  Sort  (cost=1224493.80..1228942.57 rows=1779505 width=40) (actual time=30101.746..30580.444 rows=3563644 loops=1)
Q16,2.0,->  Hash Join  (cost=164096.11..1039754.10 rows=1779505 width=40) (actual time=3711.915..18091.478 rows=3563644 loops=1)
Q12,2.0,Sort  (cost=9481905.03..9481905.03 rows=1 width=27) (actual time=93715.850..93715.850 rows=2 loops=1)
Q12,2.0,->  HashAggregate  (cost=9481905.01..9481905.02 rows=1 width=27) (actual time=93715.815..93715.815 rows=2 loops=1)
Q10,2.0,->  Hash Join  (cost=833191.09..6581066.12 rows=1692961 width=12) (actual time=18976.636..83801.690 rows=3414420 loops=1)
Q10,2.0,->  Hash Join  (cost=1040278.66..6841058.72 rows=1692961 width=176) (actual time=23128.273..91568.470 rows=3414420 loops=1)
Q10,2.0,->  Hash Join  (cost=1040277.09..6817778.94 rows=1692961 width=154) (actual time=23128.238..90317.279 rows=3414420 loops=1)
Q16,1.9,->  Seq Scan on partsupp  (cost=8.76..812872.49 rows=11999789 width=8) (actual time=1.320..9284.828 rows=23987600 loops=1)
Q21,1.8,->  Seq Scan on lineitem l1  (cost=0.00..5452366.81 rows=60059488 width=8) (actual time=0.004..56649.187 rows=113798479 loops=1)
Q21,1.8,->  Nested Loop  (cost=7192.69..7285706.14 rows=1173570 width=38) (actual time=173.918..108844.398 rows=2193364 loops=1)
Q21,1.8,->  Hash Join  (cost=7192.13..5708805.82 rows=2402380 width=34) (actual time=173.876..80302.593 rows=4536981 loops=1)
Q7,1.7,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..548447.42 rows=54802342 width=0) (actual time=383.384..383.384 rows=32161280 loops=1)
Q9,1.6,GroupAggregate  (cost=3060097.01..3060100.82 rows=109 width=46) (actual time=502777.790..514519.225 rows=175 loops=1)
Q2,1.5,->  Nested Loop  (cost=1.00..69.01 rows=6 width=8) (actual time=0.034..0.059 rows=4 loops=19294)
Q2,1.5,->  Nested Loop  (cost=0.86..68.01 rows=6 width=8) (actual time=0.031..0.051 rows=4 loops=19294)
Q2,1.5,->  Index Scan using pk_partsupp on partsupp partsupp_1  (cost=0.44..17.29 rows=6 width=8) (actual time=0.024..0.026 rows=4 loops=19294)
Q20,1.5,->  Index Scan using pk_partsupp on partsupp  (cost=0.44..789.39 rows=2 width=8) (actual time=0.439..0.511 rows=3 loops=65224)
Q1,1.5,Sort  (cost=12662802.67..12662802.69 rows=6 width=20) (actual time=270699.319..270699.320 rows=4 loops=1)
Q1,1.5,->  HashAggregate  (cost=12662802.49..12662802.60 rows=6 width=20) (actual time=270699.269..270699.271 rows=4 loops=1)
Q20,1.4,->  Nested Loop  (cost=2027.99..47509821.87 rows=120879 width=4) (actual time=49.593..34195.633 rows=177252 loops=1)
Q20,1.4,->  Hash  (cost=47509821.87..47509821.87 rows=120879 width=4) (actual time=34316.583..34316.583 rows=177252 loops=1)
Q19,1.4,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..17938.20 rows=1791820 width=0) (actual time=12.967..12.967 rows=1216000 loops=1)
Q10,1.4,->  HashAggregate  (cost=6883382.74..6900312.35 rows=1692961 width=176) (actual time=97674.321..98390.838 rows=1141341 loops=1)
Q22,1.3,->  Bitmap Index Scan on customer_c_phone_idx  (cost=0.00..8625.90 rows=420685 width=0) (actual time=2170.650..2170.650 rows=572962 loops=1)
Q22,1.3,->  Bitmap Heap Scan on customer  (cost=8731.07..125610.05 rows=420685 width=24) (actual time=2203.389..2700.721 rows=572962 loops=1)
Q9,1.2,->  Seq Scan on part  (cost=0.00..196567.00 rows=264255 width=4) (actual time=0.009..2600.480 rows=325641 loops=1)
Q9,1.2,->  Hash Join  (cost=199870.19..1053303.40 rows=1057001 width=16) (actual time=2728.240..15422.045 rows=1302564 loops=1)
Q9,1.2,->  Hash  (cost=196567.00..196567.00 rows=264255 width=4) (actual time=2725.737..2725.737 rows=325641 loops=1)
Q20,1.2,->  Bitmap Index Scan on part_p_name_idx  (cost=0.00..2012.54 rows=53998 width=0) (actual time=32.891..32.891 rows=65224 loops=1)
Q6,1.1,->  Bitmap Index Scan on lineitem_l_shipdate_l_suppkey_brin_idx  (cost=0.00..275130.10 rows=27470610 width=0) (actual time=380.981..380.981 rows=32193280 loops=1)
Q20,1.1,Sort  (cost=47518822.65..47518834.73 rows=4835 width=51) (actual time=34412.914..34413.221 rows=5341 loops=1)
Q20,1.1,->  Hash Semi Join  (cost=47511437.86..47518526.76 rows=4835 width=51) (actual time=34317.851..34405.861 rows=5341 loops=1)
Q9,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.014..7360.778 rows=24000000 loops=1)
Q8,1.0,->  Nested Loop  (cost=1896.08..101704.63 rows=900000 width=4) (actual time=11.405..6460.158 rows=899828 loops=1)
Q8,1.0,->  Nested Loop  (cost=1250.57..5247794.81 rows=372693 width=20) (actual time=21.340..44367.447 rows=367122 loops=1)
Q8,1.0,->  Nested Loop  (cost=1250.00..4489261.17 rows=1224118 width=16) (actual time=21.277..19498.392 rows=1204150 loops=1)
Q8,1.0,->  Nested Loop  (cost=114205.62..5396633.39 rows=74539 width=16) (actual time=6795.076..51975.661 rows=74044 loops=1)
Q8,1.0,->  Hash Join  (cost=114207.18..5398032.56 rows=74539 width=38) (actual time=6795.125..52105.044 rows=74044 loops=1)
Q8,1.0,->  Hash Join  (cost=114205.19..5362892.43 rows=74539 width=16) (actual time=6795.060..51404.155 rows=74044 loops=1)
Q8,1.0,->  Hash  (cost=101704.63..101704.63 rows=900000 width=4) (actual time=6769.158..6769.158 rows=899828 loops=1)
Q8,1.0,->  Bitmap Index Scan on part_p_type_p_partkey_idx  (cost=0.00..1235.26 rows=40360 width=0) (actual time=13.538..13.538 rows=40117 loops=1)
Q8,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.65 rows=31 width=0) (actual time=0.021..0.021 rows=30 loops=40117)
Q8,1.0,->  Bitmap Heap Scan on part  (cost=1245.35..84797.07 rows=40360 width=4) (actual time=21.193..450.131 rows=40117 loops=1)
Q8,1.0,->  Bitmap Heap Scan on lineitem  (cost=4.65..108.82 rows=31 width=20) (actual time=0.044..0.458 rows=30 loops=40117)
Q8,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.259..1261.414 rows=179966 loops=5)
Q7,1.0,->  Seq Scan on orders  (cost=0.00..1217106.68 rows=45270368 width=8) (actual time=0.011..8914.150 rows=45045000 loops=1)
Q7,1.0,->  Hash Join  (cost=573353.41..4860852.19 rows=4384187 width=42) (actual time=524.700..86533.203 rows=4372445 loops=1)
Q7,1.0,->  Hash Join  (cost=2217523.02..6545830.16 rows=182452 width=64) (actual time=28049.657..116317.533 rows=174817 loops=1)
Q7,1.0,->  Hash Join  (cost=175812.40..1598899.25 rows=3621629 width=30) (actual time=2493.403..26068.861 rows=3593106 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..171312.40 rows=360000 width=30) (actual time=0.037..2345.273 rows=359312 loops=1)
Q7,1.0,->  Hash Join  (cost=1.40..10905.40 rows=24000 width=30) (actual time=0.038..131.081 rows=23965 loops=1)
Q7,1.0,->  Hash  (cost=171312.40..171312.40 rows=360000 width=30) (actual time=2491.020..2491.020 rows=359312 loops=1)
Q7,1.0,->  Hash  (cost=1598899.25..1598899.25 rows=3621629 width=30) (actual time=27506.845..27506.845 rows=3593106 loops=1)
Q7,1.0,->  Hash  (cost=10905.40..10905.40 rows=24000 width=30) (actual time=138.623..138.623 rows=23965 loops=1)
Q7,1.0,->  Bitmap Heap Scan on lineitem  (cost=562148.01..4600296.14 rows=54802342 width=20) (actual time=385.918..71536.498 rows=54743745 loops=1)
Q6,1.0,->  Bitmap Heap Scan on lineitem  (cost=275727.08..4113130.81 rows=2387906 width=8) (actual time=383.585..70586.426 rows=2389881 loops=1)
Q5,1.0,->  Nested Loop  (cost=247539.26..6813023.71 rows=5516549 width=46) (actual time=7001.241..48057.337 rows=5473749 loops=1)
Q5,1.0,->  Nested Loop  (cost=1895.14..101716.11 rows=900000 width=38) (actual time=11.554..6574.654 rows=899395 loops=1)
Q5,1.0,->  Hash Join  (cost=261578.26..6870643.46 rows=220663 width=34) (actual time=7194.279..50234.393 rows=217211 loops=1)
Q5,1.0,->  Hash Join  (cost=247538.69..1317073.89 rows=1379163 width=38) (actual time=7001.223..26156.481 rows=1368873 loops=1)
Q5,1.0,->  Hash  (cost=101716.11..101716.11 rows=900000 width=38) (actual time=6912.848..6912.848 rows=899395 loops=1)
Q5,1.0,->  Bitmap Heap Scan on orders  (cost=134572.58..1164456.83 rows=6895817 width=8) (actual time=84.949..16009.548 rows=6852898 loops=1)
Q5,1.0,->  Bitmap Heap Scan on customer  (cost=1895.00..18540.43 rows=180000 width=8) (actual time=11.444..1282.904 rows=179879 loops=5)
Q4,1.0,->  Bitmap Heap Scan on orders  (cost=17493.19..811135.93 rows=1696116 width=20) (actual time=85.992..15643.071 rows=1700925 loops=1)
Q3,1.0,->  Hash Join  (cost=320073.83..1483843.61 rows=4394475 width=12) (actual time=2347.491..31320.311 rows=4398309 loops=1)
Q3,1.0,->  Hash  (cost=1483843.61..1483843.61 rows=4394475 width=12) (actual time=33514.214..33514.214 rows=4398309 loops=1)
Q3,1.0,->  Hash  (cost=137801.75..137801.75 rows=896460 width=4) (actual time=2255.691..2255.691 rows=900509 loops=1)
Q3,1.0,->  Bitmap Index Scan on customer_c_mktsegment_c_custkey_idx  (cost=0.00..20535.88 rows=896460 width=0) (actual time=221.755..221.755 rows=900509 loops=1)
Q3,1.0,->  Bitmap Heap Scan on orders  (cost=171066.34..1208169.59 rows=22059140 width=16) (actual time=84.631..18996.801 rows=21957628 loops=1)
Q3,1.0,->  Bitmap Heap Scan on lineitem  (cost=752074.42..5169019.81 rows=96987151 width=12) (actual time=387.806..65018.921 rows=96665527 loops=1)
Q3,1.0,->  Bitmap Heap Scan on customer  (cost=20760.00..137801.75 rows=896460 width=4) (actual time=259.170..1921.881 rows=900509 loops=1)
Q22,1.0,->  Seq Scan on orders  (cost=0.00..1223153.98 rows=45495298 width=4) (actual time=0.011..11234.879 rows=45000000 loops=1)
Q22,1.0,->  Hash  (cost=1223153.98..1223153.98 rows=45495298 width=4) (actual time=21812.735..21812.735 rows=45000000 loops=1)
Q22,1.0,->  Hash Anti Join  (cost=1978293.27..2301071.89 rows=181168 width=20) (actual time=24130.144..32176.705 rows=191337 loops=1)
Q22,1.0,->  Bitmap Index Scan on customer_c_phone_idx_c_acctbal  (cost=0.00..19657.30 rows=1146971 width=0) (actual time=285.928..285.928 rows=1145732 loops=1)
Q22,1.0,->  Bitmap Heap Scan on customer customer_1  (cost=19944.05..155888.04 rows=1146971 width=4) (actual time=316.852..1754.675 rows=1145732 loops=1)
Q21,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=30) (actual time=0.711..168.372 rows=11969 loops=1)
Q21,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=30) (actual time=173.733..173.733 rows=11969 loops=1)
Q21,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=34) (actual time=0.696..165.513 rows=11969 loops=1)
Q2,1.0,->  Sort  (cost=1431183.48..1443166.50 rows=4793205 width=168) (actual time=22235.052..23791.858 rows=4810169 loops=1)
Q2,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.020..5862.776 rows=24000000 loops=1)
Q2,1.0,->  Nested Loop  (cost=394.07..7770.81 rows=60000 width=164) (actual time=0.741..434.286 rows=60128 loops=1)
Q2,1.0,->  Index Scan using pk_part on part  (cost=0.43..307386.43 rows=24172 width=30) (actual time=0.121..3597.266 rows=23901 loops=1)
Q2,1.0,->  Hash Join  (cost=8520.81..899316.06 rows=4793205 width=168) (actual time=469.382..14966.572 rows=4810240 loops=1)
Q2,1.0,->  Hash  (cost=7770.81..7770.81 rows=60000 width=164) (actual time=469.099..469.099 rows=60128 loops=1)
Q2,1.0,->  Bitmap Heap Scan on supplier  (cost=393.00..1433.67 rows=12000 width=142) (actual time=0.666..84.308 rows=12026 loops=5)
Q20,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=55) (actual time=0.758..83.311 rows=12090 loops=1)
Q20,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=59) (actual time=0.742..81.455 rows=12090 loops=1)
Q20,1.0,->  Bitmap Heap Scan on part  (cost=2027.55..99528.01 rows=60058 width=4) (actual time=47.974..773.964 rows=65224 loops=1)
Q19,1.0,->  Nested Loop  (cost=38467.46..1853314.82 rows=3459 width=8) (actual time=110.034..7989.046 rows=3403 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_size_brin_idx  (cost=0.00..11970.80 rows=1195080 width=0) (actual time=12.878..12.878 rows=1216000 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..854.03 rows=24379 width=0) (actual time=10.768..10.768 rows=24240 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..834.91 rows=24070 width=0) (actual time=10.536..10.536 rows=23754 loops=1)
Q19,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..833.07 rows=23885 width=0) (actual time=11.047..11.047 rows=24114 loops=1)
Q19,1.0,->  Bitmap Index Scan on lineitem_l_partkey_l_quantity_idx  (cost=0.00..4.75 rows=31 width=0) (actual time=0.024..0.024 rows=30 loops=14298)
Q19,1.0,->  Bitmap Heap Scan on part  (cost=38462.71..79907.21 rows=14430 width=30) (actual time=106.278..813.929 rows=14298 loops=1)
Q18,1.0,->  Seq Scan on orders  (cost=0.00..1213477.98 rows=45135398 width=16) (actual time=0.026..8571.624 rows=45000000 loops=1)
Q18,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5012199.16 rows=180548716 width=8) (actual time=0.033..33284.409 rows=179998838 loops=1)
Q18,1.0,->  Seq Scan on lineitem  (cost=0.00..5012199.16 rows=180548716 width=8) (actual time=0.041..43132.696 rows=179998838 loops=1)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.024..0.047 rows=30 loops=6069)
Q17,1.0,->  Index Only Scan using lineitem_l_partkey_l_quantity_idx on lineitem lineitem_1  (cost=0.57..9.11 rows=31 width=4) (actual time=0.024..0.047 rows=30 loops=6069)
Q17,1.0,->  Bitmap Index Scan on part_p_container_p_brand_p_partkey_idx  (cost=0.00..208.60 rows=6004 width=0) (actual time=2.781..2.781 rows=6069 loops=1)
Q17,1.0,->  Bitmap Heap Scan on part  (cost=210.10..19880.40 rows=6004 width=4) (actual time=3.897..101.196 rows=6069 loops=1)
Q16,1.0,Sort  (cost=1249068.19..1249137.71 rows=27806 width=40) (actual time=32432.667..32436.419 rows=27840 loops=1)
Q16,1.0,->  Hash  (cost=152965.25..152965.25 rows=889768 width=40) (actual time=3707.166..3707.166 rows=891368 loops=1)
Q16,1.0,->  GroupAggregate  (cost=1224493.80..1247015.68 rows=27806 width=40) (actual time=30101.865..32376.746 rows=27840 loops=1)
Q16,1.0,->  Bitmap Heap Scan on part  (cost=7432.25..152965.25 rows=889768 width=40) (actual time=101.690..3333.235 rows=891368 loops=1)
Q15,1.0,->  Seq Scan on lineitem lineitem_1  (cost=0.00..5949983.68 rows=6844519 width=12) (actual time=0.036..55877.870 rows=6746023 loops=1)
Q15,1.0,->  Seq Scan on lineitem  (cost=0.00..5949983.68 rows=6844519 width=12) (actual time=0.015..57451.651 rows=6746023 loops=1)
Q15,1.0,->  Index Scan using pk_supplier on supplier  (cost=0.42..14345.36 rows=300000 width=71) (actual time=0.044..91.974 rows=286937 loops=1)
Q14,1.0,->  Hash Join  (cost=281075.42..3481502.71 rows=2349699 width=29) (actual time=5017.608..69915.850 rows=2323842 loops=1)
Q14,1.0,->  Bitmap Heap Scan on lineitem  (cost=24508.42..3177941.73 rows=2349699 width=12) (actual time=384.021..62261.713 rows=2323842 loops=1)
Q13,1.0,->  Seq Scan on orders  (cost=0.00..1335569.60 rows=45041661 width=8) (actual time=0.038..22276.401 rows=44558623 loops=1)
Q13,1.0,->  Hash Right Join  (cost=207086.00..2330884.67 rows=45041661 width=8) (actual time=3275.308..57935.375 rows=46058701 loops=1)
Q12,1.0,->  Sort  (cost=7392033.14..7394239.34 rows=882479 width=15) (actual time=72170.470..72301.380 rows=936776 loops=1)
Q12,1.0,->  Seq Scan on lineitem  (cost=0.00..7304883.04 rows=882479 width=15) (actual time=0.131..71531.388 rows=936776 loops=1)
Q12,1.0,->  Merge Join  (cost=7392046.16..9466461.62 rows=882479 width=27) (actual time=72170.563..92825.846 rows=936776 loops=1)
Q12,1.0,->  Index Scan using pk_orders on orders  (cost=0.56..1947790.49 rows=45360328 width=20) (actual time=0.007..15472.002 rows=45044941 loops=1)
Q11,1.0,->  Seq Scan on partsupp partsupp_1  (cost=0.00..752864.78 rows=23999578 width=12) (actual time=0.016..5584.998 rows=24000000 loops=1)
Q11,1.0,->  Seq Scan on partsupp  (cost=0.00..752864.78 rows=23999578 width=16) (actual time=0.019..5487.614 rows=24000000 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.719..77.266 rows=11930 loops=1)
Q11,1.0,->  Nested Loop  (cost=105.00..7042.13 rows=12000 width=4) (actual time=0.718..114.554 rows=11930 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=8) (actual time=80.543..10233.404 rows=954400 loops=1)
Q11,1.0,->  Hash Join  (cost=7192.13..859641.74 rows=958641 width=12) (actual time=118.234..9992.057 rows=954400 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=80.379..80.379 rows=11930 loops=1)
Q11,1.0,->  Hash  (cost=7042.13..7042.13 rows=12000 width=4) (actual time=118.075..118.075 rows=11930 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier supplier_1  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.675..75.391 rows=11930 loops=1)
Q11,1.0,->  Bitmap Heap Scan on supplier  (cost=105.00..6920.82 rows=12000 width=8) (actual time=0.692..112.558 rows=11930 loops=1)
Q1,1.0,->  Seq Scan on lineitem  (cost=0.00..5506879.65 rows=178898071 width=20) (actual time=0.015..57741.790 rows=176942666 loops=1)
Q10,1.0,->  Seq Scan on lineitem  (cost=0.00..5506879.65 rows=44813154 width=12) (actual time=0.045..53242.298 rows=44463463 loops=1)
Q10,1.0,->  Hash  (cost=811706.96..811706.96 rows=1718731 width=8) (actual time=18967.733..18967.733 rows=1705814 loops=1)
Q10,1.0,->  Bitmap Heap Scan on orders  (cost=17724.99..811706.96 rows=1718731 width=8) (actual time=85.553..18246.219 rows=1705814 loops=1)
